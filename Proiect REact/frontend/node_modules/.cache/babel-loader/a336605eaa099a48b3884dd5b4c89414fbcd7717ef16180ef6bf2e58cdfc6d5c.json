{"ast":null,"code":"var _jsxFileName = \"D:\\\\PlannerApp\\\\Proiect REact\\\\frontend\\\\src\\\\Pages\\\\Tasks.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, TextField, List, ListItem, ListItemText, IconButton } from \"@mui/material\";\nimport { loginButtonStyle } from \"./Login.styles\";\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\nimport axios from 'axios';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [userId, setId] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [taskName, setTaskName] = useState(\"\");\n  const [taskDescription, setTaskDescription] = useState(\"\");\n  const [taskStatus, setTaskStatus] = useState(\"\");\n  const [taskPriority, setTaskPriority] = useState(null);\n  const [taskDue, setTaskDue] = useState();\n  //const[selectedTask, setSelectedTask] = useState<Task| null>(null);\n  const [reminders, setReminders] = useState([]);\n  const handleDueDateChange = date => {\n    setTaskDue(date);\n  };\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\") || \"\");\n    if (user != null) {\n      console.log(user);\n      // setUserData(user);\n      //console.log(userData);\n      setId(user.id);\n      console.log(setId);\n    }\n  }, []);\n  const ReadAllCategories = () => {\n    try {\n      axios.get(`http://localhost:8081/Category/ReadByUserId/${userId}`, {}).then(response => {\n        localStorage.setItem(\"categorii\", JSON.stringify(response.data));\n        setCategories(response.data);\n        console.log('Import succesful', response.data);\n\n        // const approachingDate = new Date(taskDue.getTime() - 24 * 60 * 60 * 1000); // 1 day before\n        // const currentDate = new Date();\n\n        // if (currentDate < approachingDate) {\n      });\n    } catch (error) {\n      console.error('Import failed', error.message);\n    }\n  };\n  useEffect(() => {\n    if (userId === undefined || userId === null) return;\n    //const storedCategoriesString=localStorage.getItem(\"categorii\") || \"[]\";\n\n    //const storedCategories: Category[] = JSON.parse(storedCategoriesString);\n    ReadAllCategories();\n  }, [userId]);\n  const ReadAllTasks = category => {\n    setSelectedCategory(category);\n    if (category != null) try {\n      axios.get(`http://localhost:8081/Task/ReadByCategoryId/${category.categoryId}`, {}).then(response => {\n        localStorage.setItem(\"taskulete\", JSON.stringify(response.data));\n        setTasks(response.data);\n        console.log('Import succesful', response.data);\n      });\n    } catch (error) {\n      console.error('Import failed', error.message);\n    }\n  };\n  const DeleteCategory = category => {\n    setSelectedCategory(category);\n    try {\n      axios.delete(`http://localhost:8081/Category/Delete/${category.categoryId}/${userId}`, {}).then(response => {\n        setCategories(currentCategories => currentCategories.filter(c => c.categoryId !== category.categoryId));\n      });\n    } catch (error) {\n      console.error('Import failed', error.message);\n    }\n  };\n  const DeleteTask = task => {\n    try {\n      axios.delete(`http://localhost:8081/Task/Delete/${task.taskId}/${selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.categoryId}`, {}).then(response => {\n        setTasks(currentTasks => currentTasks.filter(t => t.taskId !== task.taskId));\n      });\n    } catch (error) {\n      console.error('Task deletion failed', error.message);\n    }\n  };\n  useEffect(() => {\n    const storedTasksString = localStorage.getItem(\"taskulete\") || \"[]\";\n    const storedTasks = JSON.parse(storedTasksString);\n    setTasks(storedTasks);\n  }, [selectedCategory]);\n  const handleAddCategory = () => {\n    if (newCategory.trim() !== \"\") {\n      try {\n        axios.post(`http://localhost:8081/Category/Insert/${userId}`, {\n          name: newCategory\n        }).then(response => {\n          // Update the local state with the new category\n          //setNewCategory(\"\");\n\n          setCategories([...categories, response.data]);\n        });\n      } catch (error) {\n        console.error('Category creation failed', error.message);\n      }\n    }\n  };\n  const handleAddTask = () => {\n    // if (.trim() !== \"\") {\n\n    try {\n      axios.post(`http://localhost:8081/Task/Insert/${selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.categoryId}`, {\n        title: taskName,\n        description: taskDescription,\n        dueDate: taskDue,\n        priority: taskPriority,\n        status: taskStatus\n      }).then(response => {\n        setTasks(tasks => [...tasks, response.data]);\n        //setNewCategory(\"\");\n        if (taskDue) {\n          // Add reminder if there's a due date\n          setReminders(prevReminders => [...prevReminders, {\n            title: taskName,\n            dueDate: taskDue\n          }]);\n        }\n\n        // Reset task input fields\n        setTaskName(\"\");\n        setTaskPriority(null);\n        setTaskDescription(\"\");\n        setTaskStatus(\"\");\n        setTaskDue(null);\n      });\n    } catch (error) {\n      console.error('Category creation failed', error.message);\n    }\n  };\n  const handleUpdateTask = task => {\n    try {\n      var _editedTaskDueDate;\n      axios.put(`http://localhost:8081/Task/Update`, {\n        taskId: taskId,\n        title: editedTaskTitle,\n        description: editedTaskDescription,\n        status: editedTaskStatus,\n        priority: editedTaskPriority,\n        dueDate: (_editedTaskDueDate = editedTaskDueDate) === null || _editedTaskDueDate === void 0 ? void 0 : _editedTaskDueDate.toISOString()\n      }).then(response => {\n        localStorage.setItem(\"tasks\", JSON.stringify(response.data));\n        setTasks([...tasks, response.data]);\n        console.log('Update successful', response.data);\n      });\n    } catch (error) {\n      console.error('Update failed', error.message);\n    } finally {\n      setEditedTaskId(null); // Reset edited task ID\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        objectFit: \"fill\",\n        opacity: 1,\n        zIndex: -3\n      },\n      src: require('../images/jpeg.jpeg'),\n      alt: \"Background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 50,\n        padding: \"50px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        style: {\n          height: 300,\n          overflow: \"auto\"\n        },\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          selected: selectedCategory === category,\n          onClick: () => ReadAllTasks(category),\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"delete\",\n            onClick: () => DeleteCategory(category),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, category.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"New Category\",\n        variant: \"outlined\",\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: loginButtonStyle,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleAddCategory,\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: \"60px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Tasks for \", selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        style: {\n          height: 150,\n          overflow: \"auto\"\n        },\n        children: tasks.length > 0 ? tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\" \", task.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }, this), \" -  \", task.description, /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"  Due: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 14\n          }, this), task.dueDate ? new Date(task.dueDate).toDateString() : 'No due date', /*#__PURE__*/_jsxDEV(\"button\", {\n            color: \"primary\",\n            style: {\n              marginTop: 10,\n              left: 10\n            },\n            onClick: () => updateTask(task),\n            children: \"Update Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"delete\",\n            onClick: () => DeleteTask(task),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 16\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No tasks yet...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"New Task\",\n        variant: \"outlined\",\n        onChange: e => setTaskName(e.target.value),\n        value: taskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"New Task Priority\",\n        variant: \"outlined\",\n        value: taskPriority,\n        onChange: e => setTaskPriority(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"New Task Description\",\n        variant: \"outlined\",\n        value: taskDescription,\n        onChange: e => setTaskDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"New Task Status\",\n        variant: \"outlined\",\n        value: taskStatus,\n        onChange: e => setTaskStatus(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n        dateAdapter: AdapterDayjs,\n        children: /*#__PURE__*/_jsxDEV(DateTimePicker, {\n          label: \"Due date\",\n          value: taskDue,\n          onChange: handleDueDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          ...loginButtonStyle,\n          marginTop: 10,\n          left: 10\n        },\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this)\n  // </div>\n  ;\n};\n_s(Tasks, \"pGfr4E8Y/89+lyYDZPJPFrXoH5s=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useEffect","Button","TextField","List","ListItem","ListItemText","IconButton","loginButtonStyle","AdapterDayjs","LocalizationProvider","DateTimePicker","axios","DeleteIcon","jsxDEV","_jsxDEV","Tasks","_s","userId","setId","selectedCategory","setSelectedCategory","categories","setCategories","newCategory","setNewCategory","tasks","setTasks","taskName","setTaskName","taskDescription","setTaskDescription","taskStatus","setTaskStatus","taskPriority","setTaskPriority","taskDue","setTaskDue","reminders","setReminders","handleDueDateChange","date","user","JSON","parse","localStorage","getItem","console","log","id","ReadAllCategories","get","then","response","setItem","stringify","data","error","message","undefined","ReadAllTasks","category","categoryId","DeleteCategory","delete","currentCategories","filter","c","DeleteTask","task","taskId","currentTasks","t","storedTasksString","storedTasks","handleAddCategory","trim","post","name","handleAddTask","title","description","dueDate","priority","status","prevReminders","handleUpdateTask","_editedTaskDueDate","put","editedTaskTitle","editedTaskDescription","editedTaskStatus","editedTaskPriority","editedTaskDueDate","toISOString","setEditedTaskId","style","display","children","position","top","left","width","height","objectFit","opacity","zIndex","src","require","alt","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","padding","overflow","map","button","selected","onClick","primary","edge","label","variant","value","onChange","e","target","color","flex","length","index","Date","toDateString","updateTask","parseInt","dateAdapter","_c","$RefreshReg$"],"sources":["D:/PlannerApp/Proiect REact/frontend/src/Pages/Tasks.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, TextField, List, ListItem, ListItemText, IconButton } from \"@mui/material\";\r\nimport { loginButtonStyle, parentDivStyle } from \"./Login.styles\";\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\n\r\nimport axios from 'axios';\r\nimport { forEachChild } from \"typescript\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { TaskRounded } from \"@mui/icons-material\";\r\n\r\ninterface Category {\r\n  categoryId: number;\r\n  name: string;\r\n  userId: number;\r\n}\r\n\r\ninterface Task {\r\n  taskId:number\r\n  priority:number;\r\n  title: string;\r\n  description: string;\r\n  status:string;\r\n  dueDate:Date;\r\n  }\r\n\r\n  interface Reminder {\r\n    title: string;\r\n    dueDate: Date;\r\n  }\r\n\r\n\r\nconst Tasks = (): JSX.Element => {\r\n  const [userId, setId] =useState<number | null>(null);\r\n  const [selectedCategory, setSelectedCategory] = useState<Category| null>(null);\r\n  const [categories, setCategories] = useState<Category[]>([]);\r\n  const [newCategory, setNewCategory] = useState<string>(\"\");\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [taskName, setTaskName] = useState<string>(\"\");\r\n  const [taskDescription, setTaskDescription] = useState<string>(\"\");\r\n  const [taskStatus, setTaskStatus] = useState<string>(\"\");\r\n  const [taskPriority, setTaskPriority] = useState<number | null>(null);\r\n  const [taskDue, setTaskDue] = useState<Date | null>();\r\n  //const[selectedTask, setSelectedTask] = useState<Task| null>(null);\r\n  const [reminders, setReminders] = useState<Reminder[]>([]);\r\n  \r\n  const handleDueDateChange = (date: Date | null) => {\r\n    setTaskDue(date);\r\n  };\r\n\r\n\r\n  useEffect(()=> {\r\n\r\n    const user = JSON.parse(localStorage.getItem(\"user\") || \"\");\r\n    if(user != null)\r\n    {\r\n        console.log(user);\r\n       // setUserData(user);\r\n       //console.log(userData);\r\n        setId(user.id);\r\n        console.log(setId);\r\n    }\r\n},[])\r\n\r\nconst ReadAllCategories = (): void => {\r\n \r\n   try {\r\n      axios.get(`http://localhost:8081/Category/ReadByUserId/${userId}`, {\r\n      }).then(response=> { \r\n      localStorage.setItem(\"categorii\", JSON.stringify(response.data));\r\n      setCategories(response.data);\r\n      console.log('Import succesful', response.data);\r\n      \r\n      // const approachingDate = new Date(taskDue.getTime() - 24 * 60 * 60 * 1000); // 1 day before\r\n      // const currentDate = new Date();\r\n\r\n      // if (currentDate < approachingDate) {\r\n  });       \r\n\r\n  } catch (error) {\r\n      console.error('Import failed', (error as Error).message);\r\n  }\r\n \r\n};\r\n  \r\nuseEffect(()=> {\r\n  if(userId === undefined || userId === null)\r\n    return;\r\n  //const storedCategoriesString=localStorage.getItem(\"categorii\") || \"[]\";\r\n\r\n  //const storedCategories: Category[] = JSON.parse(storedCategoriesString);\r\n  ReadAllCategories();\r\n\r\n},[userId])\r\n  \r\n  const ReadAllTasks = (category:Category) => {\r\n    setSelectedCategory(category);\r\n   if (category!=null)\r\n     try {\r\n        axios.get(`http://localhost:8081/Task/ReadByCategoryId/${category.categoryId}`, {\r\n            \r\n        }).then(response=> { \r\n        localStorage.setItem(\"taskulete\", JSON.stringify(response.data));\r\n        setTasks(response.data);\r\n        console.log('Import succesful', response.data);\r\n        \r\n    });       \r\n\r\n    } catch (error) {\r\n        console.error('Import failed', (error as Error).message);\r\n    }\r\n   \r\n  };\r\n\r\n  const DeleteCategory = (category:Category) => {\r\n    setSelectedCategory(category);\r\n     try {\r\n        axios.delete(`http://localhost:8081/Category/Delete/${category.categoryId}/${userId}`, {\r\n            \r\n        }).then(response=> { \r\n          setCategories(currentCategories => currentCategories.filter(c => c.categoryId !== category.categoryId));\r\n        })\r\n             \r\n\r\n    } catch (error) {\r\n        console.error('Import failed', (error as Error).message);\r\n    }\r\n   \r\n  };\r\n\r\n  const DeleteTask = (task: Task) => {\r\n    try {\r\n      axios.delete(`http://localhost:8081/Task/Delete/${task.taskId}/${selectedCategory?.categoryId}`, {\r\n      }).then((response) => { \r\n        setTasks(currentTasks => currentTasks.filter(t => t.taskId !== task.taskId));\r\n      });\r\n    } catch (error) {\r\n      console.error('Task deletion failed', (error as Error).message);\r\n    }\r\n  };\r\n\r\n  useEffect(()=> {\r\n\r\n    const storedTasksString=localStorage.getItem(\"taskulete\") || \"[]\";\r\n\r\n    const storedTasks: Task[] = JSON.parse(storedTasksString);\r\n    setTasks(storedTasks);\r\n  \r\n  },[selectedCategory])\r\n\r\n\r\n  const handleAddCategory = () => {\r\n    if (newCategory.trim() !== \"\") {\r\n      try { \r\n        axios.post(`http://localhost:8081/Category/Insert/${userId}`,{\r\n            name:newCategory\r\n        }).then(response => {\r\n          // Update the local state with the new category\r\n          //setNewCategory(\"\");\r\n          \r\n          setCategories([...categories, response.data]);\r\n          \r\n        });\r\n      } catch (error) {\r\n        console.error('Category creation failed', (error as Error).message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n   // if (.trim() !== \"\") {\r\n\r\n      try { \r\n        axios.post(`http://localhost:8081/Task/Insert/${selectedCategory?.categoryId}`,{\r\n            title:taskName,\r\n            description: taskDescription,\r\n            dueDate: taskDue,\r\n            priority: taskPriority,\r\n            status: taskStatus\r\n        }).then(response => {\r\n          setTasks(tasks=>[...tasks, response.data])\r\n          //setNewCategory(\"\");\r\n          if (taskDue) {\r\n            // Add reminder if there's a due date\r\n            setReminders(prevReminders => [\r\n              ...prevReminders,\r\n              {\r\n                title: taskName,\r\n                dueDate: taskDue,\r\n              },\r\n            ]);\r\n          }\r\n    \r\n          // Reset task input fields\r\n          setTaskName(\"\");\r\n          setTaskPriority(null);\r\n          setTaskDescription(\"\");\r\n          setTaskStatus(\"\");\r\n          setTaskDue(null);\r\n          \r\n        });\r\n      } catch (error) {\r\n        console.error('Category creation failed', (error as Error).message);\r\n      }\r\n    }\r\n\r\n    const handleUpdateTask = (task: Task) => {\r\n      try {\r\n        axios.put(`http://localhost:8081/Task/Update`, {\r\n          taskId: taskId,\r\n          title: editedTaskTitle,\r\n          description: editedTaskDescription,\r\n          status: editedTaskStatus,\r\n          priority: editedTaskPriority,\r\n          dueDate: editedTaskDueDate?.toISOString(),\r\n        }).then(response => {\r\n          localStorage.setItem(\"tasks\", JSON.stringify(response.data));\r\n          setTasks([...tasks, response.data]);\r\n          console.log('Update successful', response.data);\r\n        });\r\n      } catch (error) {\r\n        console.error('Update failed', (error as Error).message);\r\n      } finally {\r\n        setEditedTaskId(null); // Reset edited task ID\r\n      }\r\n    };\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n         <img\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    objectFit: \"fill\",  \r\n                    opacity: 1,  \r\n                    zIndex:-3\r\n                }}\r\n                src={require('../images/jpeg.jpeg')} \r\n                alt=\"Background\"\r\n            />\r\n      \r\n      <div style={{marginTop:50, padding: \"50px\" \r\n      }}>\r\n        <List  style={{height: 300, overflow: \"auto\"}}>\r\n          { categories.map((category) => (\r\n            <ListItem\r\n              key={category.name}\r\n              button\r\n              selected={selectedCategory === category}\r\n              onClick={() => ReadAllTasks(category)}\r\n            >\r\n              <ListItemText primary={category.name} />\r\n              <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => DeleteCategory(category)}\r\n              >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <TextField\r\n          label=\"New Category\"\r\n          variant=\"outlined\"\r\n          value={newCategory}\r\n          onChange={(e) => setNewCategory(e.target.value)}\r\n        />\r\n        <Button style={loginButtonStyle } variant=\"contained\" color=\"primary\" onClick={handleAddCategory} \r\n        >\r\n          Add Category\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Right side - Tasks for the selected category */}\r\n      <div style={{flex: 1, padding: \"60px\"}}>\r\n        <h2>Tasks for {selectedCategory?.name }</h2>\r\n        <List  style={{height: 150,  overflow: \"auto\"}}>\r\n          {\r\n          tasks.length > 0 ?\r\n          tasks.map((task, index) => (\r\n            <li key={index}><strong> {task.title}</strong> -  {task.description} \r\n             <strong>  Due: </strong>{task.dueDate ? new Date(task.dueDate).toDateString() : 'No due date'}   \r\n             <button color=\"primary\" style={{ marginTop: 10, left:10 }} onClick={() => updateTask(task)}>Update Task</button>\r\n               <IconButton edge=\"end\" aria-label=\"delete\"\r\n               onClick={() =>DeleteTask(task)\r\n               } \r\n              >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n           </li>\r\n             \r\n          ))\r\n          :\r\n          <p>No tasks yet...</p>\r\n          }\r\n        </List>\r\n        {/* <div  style={{marginTop:30}}> */}\r\n        <TextField \r\n          label=\"New Task\"\r\n          variant=\"outlined\"\r\n          onChange={(e) => setTaskName(e.target.value)}\r\n          value={taskName}\r\n        />\r\n          <TextField\r\n        label=\"New Task Priority\"\r\n        variant=\"outlined\"\r\n        value={taskPriority}\r\n        onChange={(e) => setTaskPriority(parseInt(e.target.value))}\r\n      />\r\n      <TextField\r\n        label=\"New Task Description\"\r\n        variant=\"outlined\"\r\n        value={taskDescription}\r\n        onChange={(e) => setTaskDescription(e.target.value)}\r\n      />\r\n      <TextField\r\n        label=\"New Task Status\"\r\n        variant=\"outlined\"\r\n        value={taskStatus}\r\n        onChange={(e) => setTaskStatus(e.target.value)}\r\n      />\r\n       <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n        <DateTimePicker label=\"Due date\" \r\n          value={taskDue}\r\n         onChange={handleDueDateChange}\r\n        />\r\n    </LocalizationProvider>\r\n        <Button variant=\"contained\" color=\"primary\" style={{...loginButtonStyle, marginTop: 10, left:10 }}  onClick={handleAddTask}\r\n        >\r\n          Add Task\r\n        </Button>\r\n        </div>\r\n       \r\n      </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}