{"ast":null,"code":"var _jsxFileName = \"D:\\\\PlannerApp\\\\Proiect REact\\\\frontend\\\\src\\\\Pages\\\\Tasks.tsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { Button, TextField } from \"@mui/material\";\n// import { loginButtonStyle, parentDivStyle } from \"./Login.styles\";\n\n// const Tasks = (): JSX.Element => {\n\n//     return(\n\n//         <ul className=\"taskulete\" \n//       style={{\n//         overflow:\"scroll\", \n\n//       }}  >\n//         <p> </p>\n//      </ul>\n\n//     )\n// }\n\n// export default Tasks;\n\nimport React, { useState } from \"react\";\nimport { List, ListItem, ListItemText } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const categories = [\"Category 1\", \"Category 2\", \"Category 3\", \"Category 4\"];\n  const handleCategoryClick = category => {\n    setSelectedCategory(category);\n    // You can add logic here to fetch tasks for the selected category from your backend\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"30%\",\n        overflow: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          selected: selectedCategory === category,\n          onClick: () => handleCategoryClick(category),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Tasks for \", selectedCategory || \"All Categories\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Task 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Task 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Task 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"RgHDLEuJ1Ja2GayX64Y/niiK+6s=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","List","ListItem","ListItemText","jsxDEV","_jsxDEV","Tasks","_s","selectedCategory","setSelectedCategory","categories","handleCategoryClick","category","style","display","children","width","overflow","map","button","selected","onClick","primary","fileName","_jsxFileName","lineNumber","columnNumber","flex","padding","_c","$RefreshReg$"],"sources":["D:/PlannerApp/Proiect REact/frontend/src/Pages/Tasks.tsx"],"sourcesContent":["// import React from \"react\";\r\n// import { Button, TextField } from \"@mui/material\";\r\n// import { loginButtonStyle, parentDivStyle } from \"./Login.styles\";\r\n\r\n// const Tasks = (): JSX.Element => {\r\n    \r\n//     return(\r\n\r\n//         <ul className=\"taskulete\" \r\n//       style={{\r\n//         overflow:\"scroll\", \r\n\r\n//       }}  >\r\n//         <p> </p>\r\n//      </ul>\r\n\r\n//     )\r\n// }\r\n\r\n// export default Tasks;\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Button, TextField, List, ListItem, ListItemText } from \"@mui/material\";\r\nimport { loginButtonStyle, parentDivStyle } from \"./Login.styles\";\r\n\r\nconst Tasks = (): JSX.Element => {\r\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\r\n\r\n  const categories = [\"Category 1\", \"Category 2\", \"Category 3\", \"Category 4\"];\r\n\r\n  const handleCategoryClick = (category: string) => {\r\n    setSelectedCategory(category);\r\n    // You can add logic here to fetch tasks for the selected category from your backend\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      {/* Left side - Category List */}\r\n      <div style={{ width: \"30%\", overflow: \"auto\" }}>\r\n        <List>\r\n          {categories.map((category) => (\r\n            <ListItem\r\n              key={category}\r\n              button\r\n              selected={selectedCategory === category}\r\n              onClick={() => handleCategoryClick(category)}\r\n            >\r\n              <ListItemText primary={category} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n\r\n      {/* Right side - Tasks for the selected category */}\r\n      <div style={{ flex: 1, padding: \"20px\" }}>\r\n        <h2>Tasks for {selectedCategory || \"All Categories\"}</h2>\r\n        {/* Add your logic to fetch and display tasks here */}\r\n        {/* For now, displaying a dummy list */}\r\n        <ul>\r\n          <li>Task 1</li>\r\n          <li>Task 2</li>\r\n          <li>Task 3</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAA4BC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhF,MAAMC,KAAK,GAAGA,CAAA,KAAmB;EAAAC,EAAA;EAC/B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;EAE7E,MAAMU,UAAU,GAAG,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC;EAE3E,MAAMC,mBAAmB,GAAIC,QAAgB,IAAK;IAChDH,mBAAmB,CAACG,QAAQ,CAAC;IAC7B;EACF,CAAC;;EAED,oBACEP,OAAA;IAAKQ,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAE9BV,OAAA;MAAKQ,KAAK,EAAE;QAAEG,KAAK,EAAE,KAAK;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAF,QAAA,eAC7CV,OAAA,CAACJ,IAAI;QAAAc,QAAA,EACFL,UAAU,CAACQ,GAAG,CAAEN,QAAQ,iBACvBP,OAAA,CAACH,QAAQ;UAEPiB,MAAM;UACNC,QAAQ,EAAEZ,gBAAgB,KAAKI,QAAS;UACxCS,OAAO,EAAEA,CAAA,KAAMV,mBAAmB,CAACC,QAAQ,CAAE;UAAAG,QAAA,eAE7CV,OAAA,CAACF,YAAY;YAACmB,OAAO,EAAEV;UAAS;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GAL9Bd,QAAQ;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAML,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAGNrB,OAAA;MAAKQ,KAAK,EAAE;QAAEc,IAAI,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAb,QAAA,gBACvCV,OAAA;QAAAU,QAAA,GAAI,YAAU,EAACP,gBAAgB,IAAI,gBAAgB;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAGzDrB,OAAA;QAAAU,QAAA,gBACEV,OAAA;UAAAU,QAAA,EAAI;QAAM;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACfrB,OAAA;UAAAU,QAAA,EAAI;QAAM;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACfrB,OAAA;UAAAU,QAAA,EAAI;QAAM;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CAzCID,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AA2CX,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}