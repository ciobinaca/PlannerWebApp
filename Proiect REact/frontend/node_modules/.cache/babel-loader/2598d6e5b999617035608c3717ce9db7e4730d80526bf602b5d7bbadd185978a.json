{"ast":null,"code":"var _jsxFileName = \"D:\\\\PlannerApp\\\\Proiect REact\\\\frontend\\\\src\\\\Pages\\\\Tasks.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, TextField, List, ListItem, ListItemText } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [categories, setCategories] = useState([\"Category 1\", \"Category 2\", \"Category 3\"]);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [tasks, setTasks] = useState([\"Task 1\", \"Task 2\", \"Task 3\"]);\n  const [newTask, setNewTask] = useState(\"\");\n  const handleCategoryClick = category => {\n    setSelectedCategory(category);\n    // You can add logic here to fetch tasks for the selected category from your backend\n  };\n\n  const handleAddCategory = () => {\n    if (newCategory.trim() !== \"\") {\n      setCategories([...categories, newCategory]);\n      setNewCategory(\"\");\n    }\n  };\n  const handleAddTask = () => {\n    if (newTask.trim() !== \"\") {\n      setTasks([...tasks, newTask]);\n      setNewTask(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"30%\",\n        overflow: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          selected: selectedCategory === category,\n          onClick: () => handleCategoryClick(category),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"New Category\",\n        variant: \"outlined\",\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleAddCategory,\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Tasks for \", selectedCategory || \"All Categories\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: task\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"New Task\",\n        variant: \"outlined\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"kby8qtHImgkq7SEb6MtkjDaxkFw=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","Button","TextField","List","ListItem","ListItemText","jsxDEV","_jsxDEV","Tasks","_s","selectedCategory","setSelectedCategory","categories","setCategories","newCategory","setNewCategory","tasks","setTasks","newTask","setNewTask","handleCategoryClick","category","handleAddCategory","trim","handleAddTask","style","display","children","width","overflow","map","button","selected","onClick","primary","fileName","_jsxFileName","lineNumber","columnNumber","label","variant","value","onChange","e","target","color","flex","padding","task","index","_c","$RefreshReg$"],"sources":["D:/PlannerApp/Proiect REact/frontend/src/Pages/Tasks.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, TextField, List, ListItem, ListItemText } from \"@mui/material\";\r\nimport { loginButtonStyle, parentDivStyle } from \"./Login.styles\";\r\n\r\nconst Tasks = (): JSX.Element => {\r\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\r\n  const [categories, setCategories] = useState<string[]>([\"Category 1\", \"Category 2\", \"Category 3\"]);\r\n  const [newCategory, setNewCategory] = useState<string>(\"\");\r\n  const [tasks, setTasks] = useState<string[]>([\"Task 1\", \"Task 2\", \"Task 3\"]);\r\n  const [newTask, setNewTask] = useState<string>(\"\");\r\n\r\n  const handleCategoryClick = (category: string) => {\r\n    setSelectedCategory(category);\r\n    // You can add logic here to fetch tasks for the selected category from your backend\r\n  };\r\n\r\n  const handleAddCategory = () => {\r\n    if (newCategory.trim() !== \"\") {\r\n      setCategories([...categories, newCategory]);\r\n      setNewCategory(\"\");\r\n    }\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    if (newTask.trim() !== \"\") {\r\n      setTasks([...tasks, newTask]);\r\n      setNewTask(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      {/* Left side - Category List */}\r\n      <div style={{ width: \"30%\", overflow: \"auto\" }}>\r\n        <List>\r\n          { categories.map((category) => (\r\n            <ListItem\r\n              key={category}\r\n              button\r\n              selected={selectedCategory === category}\r\n              onClick={() => handleCategoryClick(category)}\r\n            >\r\n              <ListItemText primary={category} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <TextField\r\n          label=\"New Category\"\r\n          variant=\"outlined\"\r\n          value={newCategory}\r\n          onChange={(e) => setNewCategory(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleAddCategory}>\r\n          Add Category\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Right side - Tasks for the selected category */}\r\n      <div style={{ flex: 1, padding: \"20px\" }}>\r\n        <h2>Tasks for {selectedCategory || \"All Categories\"}</h2>\r\n        <ul>\r\n          {tasks.map((task, index) => (\r\n            <li key={index}>{task}</li>\r\n          ))}\r\n        </ul>\r\n        <TextField\r\n          label=\"New Task\"\r\n          variant=\"outlined\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleAddTask}>\r\n          Add Task\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}