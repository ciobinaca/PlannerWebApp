{"ast":null,"code":"var _jsxFileName = \"D:\\\\PlannerApp\\\\Proiect REact\\\\frontend\\\\src\\\\Pages\\\\Admin.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, TextField, List, ListItem, ListItemText, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, FormControlLabel, Checkbox } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport axios from 'axios';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [reminders, setReminders] = useState([]);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newTask, setNewTask] = useState(\"\");\n  const [newUser, setNewUser] = useState(\"\");\n  const [newReminder, setNewReminder] = useState(\"\");\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [editedCategoryId, setEditedCategoryId] = useState(null);\n  const [editedCategoryName, setEditedCategoryName] = useState(\"\");\n  const [editedUserId, setEditedUserId] = useState(null);\n  const [editedUserName, setEditedUserName] = useState(\"\");\n  const [editedUserEmail, setEditedUserEmail] = useState(\"\");\n  const [editedUserPassword, setEditedUserPassword] = useState(\"\");\n  const [editedUserAdmin, setEditedUserAdmin] = useState();\n  const [editedTaskId, setEditedTaskId] = useState(null);\n  const [editedTaskTitle, setEditedTaskTitle] = useState(\"\");\n  const [editedTaskDescription, setEditedTaskDescription] = useState(\"\");\n  const [editedTaskStatus, setEditedTaskStatus] = useState(\"\");\n  const [editedTaskPriority, setEditedTaskPriority] = useState(0);\n  const [editedTaskDueDate, setEditedTaskDueDate] = useState(null);\n  const [newUsername, setNewUsername] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false); // Adjust if needed\n  const [newTaskTitle, setNewTaskTitle] = useState(\"\");\n  const [newTaskDescription, setNewTaskDescription] = useState(\"\");\n  const [newTaskStatus, setNewTaskStatus] = useState(\"\");\n  const [newTaskPriority, setNewTaskPriority] = useState(1); // Default priority, adjust as needed\n  const [newTaskDueDate, setNewTaskDueDate] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const ReadAllUsers = () => {\n    try {\n      axios.get(`http://localhost:8081/User/ReadAll`, {}).then(response => {\n        localStorage.setItem(\"userii\", JSON.stringify(response.data));\n        setUsers(response.data);\n        console.log('Import succesful', response.data);\n      });\n    } catch (error) {\n      console.error('Import failed', error.message);\n    }\n  };\n  const ReadAllCategories = () => {\n    try {\n      axios.get(`http://localhost:8081/Category/ReadAll`, {}).then(response => {\n        localStorage.setItem(\"categorii\", JSON.stringify(response.data));\n        setCategories(response.data);\n        console.log('Import succesful', response.data);\n      });\n    } catch (error) {\n      console.error('Import failed', error.message);\n    }\n  };\n  const ReadAllTasks = () => {\n    try {\n      axios.get(`http://localhost:8081/Task/ReadAll`, {}).then(response => {\n        localStorage.setItem(\"tasks\", JSON.stringify(response.data));\n        setTasks(response.data);\n        console.log('Import succesful', response.data);\n      });\n    } catch (error) {\n      console.error('Import failed', error.message);\n    }\n  };\n  const handleDeleteCategory = category => {\n    try {\n      axios.delete(`http://localhost:8081/Category/Delete/${category.categoryId}/${selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id}`, {}).then(response => {\n        setCategories(currentCategories => currentCategories.filter(c => c.categoryId !== category.categoryId));\n      });\n    } catch (error) {\n      console.error('Import failed', error.message);\n    }\n  };\n  const handleAddCategory = () => {\n    try {\n      axios.post(`http://localhost:8081/Category/Insert/${selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id}`, {\n        name: newCategory\n      }).then(response => {\n        localStorage.setItem(\"categorii\", JSON.stringify(response.data));\n        setCategories([...categories, response.data]);\n        console.log('Category added successfully', response.data);\n      });\n    } catch (error) {\n      console.error('Category creation failed', error.message);\n    }\n  };\n  const handleAddTask = () => {\n    try {\n      axios.post(`http://localhost:8081/Task/Insert/${selectedCategory}`, {\n        title: newTaskTitle,\n        description: newTaskDescription,\n        status: newTaskStatus,\n        priority: newTaskPriority,\n        dueDate: newTaskDueDate\n      }).then(response => {\n        localStorage.setItem(\"tasks\", JSON.stringify(response.data));\n        setTasks([...tasks, response.data]);\n        console.log('Task added successfully', response.data);\n      });\n    } catch (error) {\n      console.error('Task creation failed', error.message);\n    }\n  };\n  const handleAddUser = () => {\n    try {\n      axios.post(`http://localhost:8081/User/Insert`, {\n        username: newUsername,\n        email: newEmail,\n        password: newPassword,\n        admin: isAdmin\n        // Add other user properties if needed\n      }).then(response => {\n        localStorage.setItem(\"userii\", JSON.stringify(response.data));\n        setUsers([...users, response.data]);\n        console.log('User added successfully', response.data);\n      });\n    } catch (error) {\n      console.error('User add failed', error.message);\n    } finally {\n      // Clear the fields after adding the user\n      setNewUsername(\"\");\n      setNewEmail(\"\");\n      setNewPassword(\"\");\n      setIsAdmin(false);\n    }\n  };\n  const handleAddReminder = () => {\n    // Implement logic for adding a new reminder\n  };\n  const handleDeleteTask = task => {\n    try {\n      axios.delete(`http://localhost:8081/Task/Delete/${task.taskId}/${selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.categoryId}`, {}).then(response => {\n        setTasks(currentTasks => currentTasks.filter(t => t.taskId !== task.taskId));\n      });\n    } catch (error) {\n      console.error('Task deletion failed', error.message);\n    }\n  };\n  const handleDeleteUser = userId => {\n    try {\n      axios.delete(`http://localhost:8081/User/Delete/${userId}`, {}).then(response => {\n        setUsers(currentU => currentU.filter(c => c.id !== userId));\n        console.log('User updated successfully', response.data);\n      });\n    } catch (error) {\n      console.error('User update failed', error.message);\n    }\n  };\n  const handleDeleteReminder = reminderId => {\n    // Implement logic for deleting a reminder\n  };\n  const handleEditCategory = categoryId => {\n    const categoryToEdit = categories.find(category => category.categoryId === categoryId);\n    if (categoryToEdit) {\n      setEditedCategoryId(categoryId);\n      setEditedCategoryName(categoryToEdit.name);\n    }\n  };\n  const handleUpdateCategory = categoryId => {\n    try {\n      axios.put(`http://localhost:8081/Category/Update`, {\n        categoryId: categoryId,\n        name: editedCategoryName\n      }).then(response => {\n        localStorage.setItem(\"categorii\", JSON.stringify(response.data));\n        setCategories([...categories, response.data]);\n        console.log('Import succesful', response.data);\n      });\n    } catch (error) {\n      console.error('Import failed', error.message);\n    }\n  };\n  const handleEditTask = taskId => {\n    const taskToEdit = tasks.find(task => task.taskId === taskId);\n    if (taskToEdit) {\n      setEditedTaskId(taskId);\n      setEditedTaskTitle(taskToEdit.title);\n      setEditedTaskDescription(taskToEdit.description);\n      setEditedTaskStatus(taskToEdit.status);\n      setEditedTaskPriority(taskToEdit.priority);\n      setEditedTaskDueDate(new Date(taskToEdit.dueDate));\n    }\n  };\n  const handleUpdateTask = taskId => {\n    try {\n      axios.put(`http://localhost:8081/Task/Update`, {\n        taskId: taskId,\n        title: editedTaskTitle,\n        description: editedTaskDescription,\n        status: editedTaskStatus,\n        priority: editedTaskPriority,\n        dueDate: editedTaskDueDate === null || editedTaskDueDate === void 0 ? void 0 : editedTaskDueDate.toISOString()\n      }).then(response => {\n        localStorage.setItem(\"tasks\", JSON.stringify(response.data));\n        setTasks([...tasks, response.data]);\n        console.log('Update successful', response.data);\n      });\n    } catch (error) {\n      console.error('Update failed', error.message);\n    } finally {\n      setEditedTaskId(null); // Reset edited task ID\n    }\n  };\n\n  const handleEditUser = userId => {\n    const userToEdit = users.find(user => user.id === userId);\n    if (userToEdit) {\n      setEditedUserId(userId);\n      setEditedUserName(userToEdit.username);\n      setEditedUserEmail(userToEdit.email);\n      setEditedUserPassword(userToEdit.password);\n    }\n  };\n  const handleUpdateUser = userId => {\n    try {\n      axios.put(`http://localhost:8081/User/Update`, {\n        userId: userId,\n        username: editedUserName,\n        email: editedUserEmail,\n        password: editedUserPassword\n      }).then(response => {\n        localStorage.setItem(\"userii\", JSON.stringify(response.data));\n        setUsers([...users, response.data]);\n        console.log('User updated successfully', response.data);\n      });\n    } catch (error) {\n      console.error('User update failed', error.message);\n    }\n  };\n  const handleEditReminder = reminderId => {\n    // Implement logic for editing a reminder\n  };\n  useEffect(() => {}, [selectedUser]);\n  const renderTables = selectedUser => {\n    if (!selectedUser) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select a user from the list.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"New Category\",\n        variant: \"outlined\",\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAddCategory,\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 54\n        }, this),\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      style: {\n        overflow: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        selected: !selectedUser,\n        onClick: () => ReadAllUsers(),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"All Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"UserID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [users.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n              selected: (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === user.id,\n              onClick: () => setSelectedUser(user),\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: editedUserId === user.id ? /*#__PURE__*/_jsxDEV(TextField, {\n                  value: editedUserName,\n                  onChange: e => setEditedUserName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 15\n                }, this) : user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: editedUserId === user.id ? /*#__PURE__*/_jsxDEV(TextField, {\n                  value: editedUserEmail,\n                  onChange: e => setEditedUserEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 15\n                }, this) : user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: editedUserId === user.id ? /*#__PURE__*/_jsxDEV(TextField, {\n                  value: editedUserPassword,\n                  onChange: e => setEditedUserPassword(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 15\n                }, this) : user.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: editedUserAdmin,\n                    onChange: () => setEditedUserAdmin(!editedUserAdmin)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 14\n                  }, this),\n                  label: \"Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleUpdateUser(user.id),\n                  children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEditUser(user.id),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDeleteUser(user.id),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 11\n              }, this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 9\n            }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Username\",\n              variant: \"outlined\",\n              value: newUsername,\n              onChange: e => setNewUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          variant: \"outlined\",\n          value: newEmail,\n          onChange: e => setNewEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          variant: \"outlined\",\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: isAdmin,\n            onChange: () => setIsAdmin(!isAdmin)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 12\n          }, this),\n          label: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddUser,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 44\n          }, this),\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        selected: !selectedUser,\n        onClick: () => ReadAllCategories(),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Category ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [categories.map(category => /*#__PURE__*/_jsxDEV(TableRow, {\n              selected: (selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.categoryId) === category.categoryId,\n              onClick: () => setSelectedCategory(category),\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: category.categoryId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: editedCategoryId === category.categoryId ? /*#__PURE__*/_jsxDEV(TextField, {\n                  value: editedCategoryName,\n                  onChange: e => setEditedCategoryName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 21\n                }, this) : category.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleUpdateCategory(category.categoryId),\n                  children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 526,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEditCategory(category.categoryId),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 529,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDeleteCategory(category),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 15\n              }, this)]\n            }, category.categoryId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 13\n            }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"New Category\",\n              variant: \"outlined\",\n              value: newCategory,\n              onChange: e => setNewCategory(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleAddCategory,\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 54\n              }, this),\n              children: \"Add Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        selected: !selectedUser,\n        onClick: () => ReadAllTasks(),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"All Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"TaskId\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: tasks.map(task => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: task.taskId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: editedTaskId === task.taskId ? /*#__PURE__*/_jsxDEV(TextField, {\n                  value: editedTaskTitle,\n                  onChange: e => setEditedTaskTitle(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 15\n                }, this) : task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: editedTaskId === task.taskId ? /*#__PURE__*/_jsxDEV(TextField, {\n                  value: editedTaskDescription,\n                  onChange: e => setEditedTaskDescription(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 15\n                }, this) : task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: editedTaskId === task.taskId ? /*#__PURE__*/_jsxDEV(TextField, {\n                  value: editedTaskStatus,\n                  onChange: e => setEditedTaskStatus(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 599,\n                  columnNumber: 15\n                }, this) : task.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: editedTaskId === task.taskId ? /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"number\",\n                  value: editedTaskPriority,\n                  onChange: e => setEditedTaskPriority(Number(e.target.value))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 15\n                }, this) : task.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: editedTaskId === task.taskId ? /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"date\",\n                  value: editedTaskDueDate === null || editedTaskDueDate === void 0 ? void 0 : editedTaskDueDate.toISOString().split(\"T\")[0],\n                  onChange: e => setEditedTaskDueDate(new Date(e.target.value))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 620,\n                  columnNumber: 15\n                }, this) : new Date(task.dueDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleUpdateTask(task.taskId),\n                  children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEditTask(task.taskId),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 634,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDeleteTask(task),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 637,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 11\n              }, this)]\n            }, task.taskId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Title\",\n          variant: \"outlined\",\n          value: newTaskTitle,\n          onChange: e => setNewTaskTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Description\",\n          variant: \"outlined\",\n          value: newTaskDescription,\n          onChange: e => setNewTaskDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Status\",\n          variant: \"outlined\",\n          value: newTaskStatus,\n          onChange: e => setNewTaskStatus(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"number\",\n          label: \"Priority\",\n          variant: \"outlined\",\n          value: newTaskPriority,\n          onChange: e => setNewTaskPriority(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"date\",\n          label: \"Due Date\",\n          variant: \"outlined\",\n          value: (newTaskDueDate === null || newTaskDueDate === void 0 ? void 0 : newTaskDueDate.toISOString().split(\"T\")[0]) || \"\",\n          onChange: e => setNewTaskDueDate(new Date(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddTask,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 44\n          }, this),\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 380,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"4HcpMSzVVUap9WTVRexbOA/h86Y=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","Button","TextField","List","ListItem","ListItemText","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","FormControlLabel","Checkbox","DeleteIcon","EditIcon","AddIcon","axios","CheckCircleIcon","jsxDEV","_jsxDEV","AdminPage","_s","categories","setCategories","tasks","setTasks","users","setUsers","reminders","setReminders","newCategory","setNewCategory","newTask","setNewTask","newUser","setNewUser","newReminder","setNewReminder","selectedUser","setSelectedUser","editedCategoryId","setEditedCategoryId","editedCategoryName","setEditedCategoryName","editedUserId","setEditedUserId","editedUserName","setEditedUserName","editedUserEmail","setEditedUserEmail","editedUserPassword","setEditedUserPassword","editedUserAdmin","setEditedUserAdmin","editedTaskId","setEditedTaskId","editedTaskTitle","setEditedTaskTitle","editedTaskDescription","setEditedTaskDescription","editedTaskStatus","setEditedTaskStatus","editedTaskPriority","setEditedTaskPriority","editedTaskDueDate","setEditedTaskDueDate","newUsername","setNewUsername","newEmail","setNewEmail","newPassword","setNewPassword","isAdmin","setIsAdmin","newTaskTitle","setNewTaskTitle","newTaskDescription","setNewTaskDescription","newTaskStatus","setNewTaskStatus","newTaskPriority","setNewTaskPriority","newTaskDueDate","setNewTaskDueDate","selectedCategory","setSelectedCategory","ReadAllUsers","get","then","response","localStorage","setItem","JSON","stringify","data","console","log","error","message","ReadAllCategories","ReadAllTasks","handleDeleteCategory","category","delete","categoryId","id","currentCategories","filter","c","handleAddCategory","post","name","handleAddTask","title","description","status","priority","dueDate","handleAddUser","username","email","password","admin","handleAddReminder","handleDeleteTask","task","taskId","currentTasks","t","handleDeleteUser","userId","currentU","handleDeleteReminder","reminderId","handleEditCategory","categoryToEdit","find","handleUpdateCategory","put","handleEditTask","taskToEdit","Date","handleUpdateTask","toISOString","handleEditUser","userToEdit","user","handleUpdateUser","handleEditReminder","renderTables","children","fileName","_jsxFileName","lineNumber","columnNumber","label","variant","value","onChange","e","target","onClick","startIcon","style","overflow","button","selected","primary","map","control","checked","type","Number","split","toLocaleDateString","_c","$RefreshReg$"],"sources":["D:/PlannerApp/Proiect REact/frontend/src/Pages/Admin.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {Button, TextField, List, ListItem, ListItemText, IconButton, \r\n    Table, TableBody, TableCell, TableContainer, TableHead, TableRow, FormControlLabel, Checkbox,} from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport axios from 'axios';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\n\r\ninterface Category {\r\n  categoryId: number;\r\n  name: string;\r\n}\r\n\r\ninterface Task {\r\n  taskId: number;\r\n  priority: number;\r\n  title: string;\r\n  description: string;\r\n  status: string;\r\n  dueDate: Date;\r\n}\r\n\r\ninterface User {\r\n  id: number;\r\n  username: string;\r\n  email:string;\r\n  password:string;\r\n  admin:Boolean;\r\n  \r\n}\r\n\r\ninterface Reminder {\r\n  reminderId: number;\r\n  userId: number;\r\n  taskId: number;\r\n  // other reminder properties...\r\n}\r\n\r\nconst AdminPage = (): JSX.Element => {\r\n  const [categories, setCategories] = useState<Category[]>([]);\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [reminders, setReminders] = useState<Reminder[]>([]);\r\n  const [newCategory, setNewCategory] = useState<string>(\"\");\r\n  const [newTask, setNewTask] = useState<string>(\"\");\r\n  const [newUser, setNewUser] = useState<string>(\"\");\r\n  const [newReminder, setNewReminder] = useState<string>(\"\");\r\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\r\n  const [editedCategoryId, setEditedCategoryId] = useState<number | null>(null);\r\n  const [editedCategoryName, setEditedCategoryName] = useState<string>(\"\");\r\n  const [editedUserId, setEditedUserId] = useState<number | null>(null);\r\nconst [editedUserName, setEditedUserName] = useState<string>(\"\");\r\nconst [editedUserEmail, setEditedUserEmail] = useState<string>(\"\");\r\nconst [editedUserPassword, setEditedUserPassword] = useState<string>(\"\");\r\nconst [editedUserAdmin, setEditedUserAdmin] = useState<Boolean>();\r\nconst [editedTaskId, setEditedTaskId] = useState<number | null>(null);\r\nconst [editedTaskTitle, setEditedTaskTitle] = useState<string>(\"\");\r\nconst [editedTaskDescription, setEditedTaskDescription] = useState<string>(\"\");\r\nconst [editedTaskStatus, setEditedTaskStatus] = useState<string>(\"\");\r\nconst [editedTaskPriority, setEditedTaskPriority] = useState<number>(0);\r\nconst [editedTaskDueDate, setEditedTaskDueDate] = useState<Date | null>(null);\r\nconst [newUsername, setNewUsername] = useState<string>(\"\");\r\nconst [newEmail, setNewEmail] = useState<string>(\"\");\r\nconst [newPassword, setNewPassword] = useState<string>(\"\");\r\nconst [isAdmin, setIsAdmin] = useState<boolean>(false); // Adjust if needed\r\nconst [newTaskTitle, setNewTaskTitle] = useState<string>(\"\");\r\nconst [newTaskDescription, setNewTaskDescription] = useState<string>(\"\");\r\nconst [newTaskStatus, setNewTaskStatus] = useState<string>(\"\");\r\nconst [newTaskPriority, setNewTaskPriority] = useState<number>(1); // Default priority, adjust as needed\r\nconst [newTaskDueDate, setNewTaskDueDate] = useState<Date | null>(null);\r\nconst [selectedCategory, setSelectedCategory] = useState<Category | null>(null);\r\n\r\n\r\n  const ReadAllUsers=(): void =>{\r\n\r\n    try {\r\n        axios.get(`http://localhost:8081/User/ReadAll`, {\r\n        }).then(response=> { \r\n        localStorage.setItem(\"userii\", JSON.stringify(response.data));\r\n        setUsers(response.data);\r\n        console.log('Import succesful', response.data);\r\n        \r\n    });       \r\n  \r\n    } catch (error) {\r\n        console.error('Import failed', (error as Error).message);\r\n    }\r\n   \r\n\r\n  }\r\n\r\n  const ReadAllCategories = (): void => {\r\n\r\n    try {\r\n       axios.get(`http://localhost:8081/Category/ReadAll`, {\r\n       }).then(response=> { \r\n       localStorage.setItem(\"categorii\", JSON.stringify(response.data));\r\n       setCategories(response.data);\r\n       console.log('Import succesful', response.data);\r\n       \r\n   });       \r\n \r\n   } catch (error) {\r\n       console.error('Import failed', (error as Error).message);\r\n   }\r\n  \r\n };\r\n\r\n   const ReadAllTasks = (): void => {\r\n\r\n    try {\r\n       axios.get(`http://localhost:8081/Task/ReadAll`, {\r\n       }).then(response=> { \r\n       localStorage.setItem(\"tasks\", JSON.stringify(response.data));\r\n       setTasks(response.data);\r\n       console.log('Import succesful', response.data);\r\n       \r\n   });       \r\n \r\n   } catch (error) {\r\n       console.error('Import failed', (error as Error).message);\r\n   }\r\n  \r\n };\r\n\r\n const handleDeleteCategory = (category:Category) => {\r\n    \r\n     try {\r\n        axios.delete(`http://localhost:8081/Category/Delete/${category.categoryId}/${selectedUser?.id}`, {\r\n            \r\n        }).then(response=> { \r\n          setCategories(currentCategories => currentCategories.filter(c => c.categoryId !== category.categoryId));\r\n        })\r\n             \r\n\r\n    } catch (error) {\r\n        console.error('Import failed', (error as Error).message);\r\n    }\r\n   \r\n  };\r\n\r\n\r\n    const handleAddCategory = () => {\r\n        try {\r\n          axios.post(`http://localhost:8081/Category/Insert/${selectedUser?.id}`, {\r\n            name: newCategory\r\n          }).then((response) => {\r\n            localStorage.setItem(\"categorii\", JSON.stringify(response.data));\r\n            setCategories([...categories, response.data]);\r\n            console.log('Category added successfully', response.data);\r\n          });\r\n        } catch (error) {\r\n          console.error('Category creation failed', (error as Error).message);\r\n        }\r\n      };\r\n  \r\n\r\n    const handleAddTask = () => {\r\n        try {\r\n          axios.post(`http://localhost:8081/Task/Insert/${selectedCategory}`, {\r\n            title: newTaskTitle,\r\n            description: newTaskDescription,\r\n            status: newTaskStatus,\r\n            priority: newTaskPriority,\r\n            dueDate: newTaskDueDate,\r\n          }).then((response) => {\r\n            localStorage.setItem(\"tasks\", JSON.stringify(response.data));\r\n            setTasks([...tasks, response.data]);\r\n            console.log('Task added successfully', response.data);\r\n          });\r\n        } catch (error) {\r\n          console.error('Task creation failed', (error as Error).message);\r\n        }\r\n      };\r\n  \r\n\r\n  const handleAddUser = () => {\r\n    try {\r\n      axios.post(`http://localhost:8081/User/Insert`, {\r\n        username: newUsername,\r\n        email: newEmail,\r\n        password: newPassword,\r\n        admin: isAdmin,\r\n        // Add other user properties if needed\r\n      }).then(response => {\r\n        localStorage.setItem(\"userii\", JSON.stringify(response.data));\r\n        setUsers([...users, response.data]);\r\n        console.log('User added successfully', response.data);\r\n      });\r\n    } catch (error) {\r\n      console.error('User add failed', (error as Error).message);\r\n    } finally {\r\n      // Clear the fields after adding the user\r\n      setNewUsername(\"\");\r\n      setNewEmail(\"\");\r\n      setNewPassword(\"\");\r\n      setIsAdmin(false);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleAddReminder = () => {\r\n    // Implement logic for adding a new reminder\r\n  };\r\n\r\n\r\n  const handleDeleteTask = (task: Task) => {\r\n    try {\r\n      axios.delete(`http://localhost:8081/Task/Delete/${task.taskId}/${selectedCategory?.categoryId}`, {\r\n      }).then((response) => { \r\n        setTasks(currentTasks => currentTasks.filter(t => t.taskId !== task.taskId));\r\n      });\r\n    } catch (error) {\r\n      console.error('Task deletion failed', (error as Error).message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteUser = (userId: number) => {\r\n    try {\r\n        axios.delete(`http://localhost:8081/User/Delete/${userId}`, {\r\n        }).then(response=> {\r\n          setUsers(currentU => currentU.filter(c => c.id !== userId));\r\n          console.log('User updated successfully', response.data);\r\n        });\r\n      } catch (error) {\r\n        console.error('User update failed', (error as Error).message);\r\n      }\r\n  };\r\n\r\n  const handleDeleteReminder = (reminderId: number) => {\r\n    // Implement logic for deleting a reminder\r\n  };\r\n\r\n  const handleEditCategory = (categoryId: number) => {\r\n    const categoryToEdit = categories.find((category) => category.categoryId === categoryId);\r\n\r\n    if (categoryToEdit) {\r\n      setEditedCategoryId(categoryId);\r\n      setEditedCategoryName(categoryToEdit.name);}\r\n    \r\n     \r\n  };\r\n\r\n  const handleUpdateCategory = (categoryId: number) => {\r\n    \r\n      try {\r\n        axios.put(`http://localhost:8081/Category/Update`, {\r\n            categoryId: categoryId,\r\n            name:editedCategoryName\r\n        }).then(response=> { \r\n        localStorage.setItem(\"categorii\", JSON.stringify(response.data));\r\n        setCategories([...categories, response.data]);\r\n        console.log('Import succesful', response.data);\r\n        \r\n    });       \r\n  \r\n    } catch (error) {\r\n        console.error('Import failed', (error as Error).message);\r\n    }\r\n  };\r\n\r\n\r\n  const handleEditTask = (taskId: number) => {\r\n    const taskToEdit = tasks.find((task) => task.taskId === taskId);\r\n  \r\n    if (taskToEdit) {\r\n      setEditedTaskId(taskId);\r\n      setEditedTaskTitle(taskToEdit.title);\r\n      setEditedTaskDescription(taskToEdit.description);\r\n      setEditedTaskStatus(taskToEdit.status);\r\n      setEditedTaskPriority(taskToEdit.priority);\r\n      setEditedTaskDueDate(new Date(taskToEdit.dueDate));\r\n    }\r\n  };\r\n  \r\n  const handleUpdateTask = (taskId: number) => {\r\n    try {\r\n      axios.put(`http://localhost:8081/Task/Update`, {\r\n        taskId: taskId,\r\n        title: editedTaskTitle,\r\n        description: editedTaskDescription,\r\n        status: editedTaskStatus,\r\n        priority: editedTaskPriority,\r\n        dueDate: editedTaskDueDate?.toISOString(),\r\n      }).then(response => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(response.data));\r\n        setTasks([...tasks, response.data]);\r\n        console.log('Update successful', response.data);\r\n      });\r\n    } catch (error) {\r\n      console.error('Update failed', (error as Error).message);\r\n    } finally {\r\n      setEditedTaskId(null); // Reset edited task ID\r\n    }\r\n  };\r\n\r\n  const handleEditUser = (userId: number) => {\r\n    const userToEdit = users.find((user) => user.id === userId);\r\n  \r\n    if (userToEdit) {\r\n      setEditedUserId(userId);\r\n      setEditedUserName(userToEdit.username);\r\n      setEditedUserEmail(userToEdit.email);\r\n      setEditedUserPassword(userToEdit.password);\r\n    }\r\n  };\r\n\r\n  const handleUpdateUser = (userId: number) => {\r\n    try {\r\n      axios.put(`http://localhost:8081/User/Update`, {\r\n        userId: userId,\r\n        username: editedUserName,\r\n        email: editedUserEmail,\r\n        password: editedUserPassword,\r\n      }).then(response => {\r\n        localStorage.setItem(\"userii\", JSON.stringify(response.data));\r\n        setUsers([...users, response.data]);\r\n        console.log('User updated successfully', response.data);\r\n      });\r\n    } catch (error) {\r\n      console.error('User update failed', (error as Error).message);\r\n    }\r\n  };\r\n  const handleEditReminder = (reminderId: number) => {\r\n    // Implement logic for editing a reminder\r\n  };\r\n\r\n  useEffect(() => {\r\n      \r\n  }, [selectedUser]);\r\n\r\n  const renderTables = (selectedUser: User | null) => { \r\n    if (!selectedUser) {\r\n      return <p>Please select a user from the list.</p>;\r\n    }\r\n    return (\r\n        <div>\r\n            \r\n         {/* Categories Table */}\r\n     \r\n    {/* Tasks Table */}\r\n    <TableContainer>\r\n      {/* Similar structure for Tasks Table */}\r\n    </TableContainer>\r\n\r\n\r\n    {/* Reminders Table */}\r\n    <TableContainer>\r\n      {/* Similar structure for Reminders Table */}\r\n    </TableContainer>\r\n\r\n    \r\n      {/* Add New Category */}\r\n      <TextField\r\n        label=\"New Category\"\r\n        variant=\"outlined\"\r\n        value={newCategory}\r\n        onChange={(e) => setNewCategory(e.target.value)}\r\n      />\r\n      <Button onClick={handleAddCategory} startIcon={<AddIcon />}>\r\n        Add Category\r\n      </Button>\r\n\r\n      {/* Add New Task */}\r\n      {/* Similar structure for Add New Task */}\r\n\r\n      \r\n\r\n      {/* Add New Reminder */}\r\n      {/* Similar structure for Add New Reminder */}\r\n    </div>\r\n    );\r\n    \r\n};\r\n\r\n  return (\r\n    <div>\r\n      <h2>Admin Page</h2>\r\n       \r\n       \r\n      <List style={{overflow: \"auto\"}}>\r\n        <ListItem\r\n          button\r\n          selected={!selectedUser}\r\n          onClick={() => ReadAllUsers()}\r\n        >\r\n          <ListItemText primary=\"All Users\" />\r\n          </ListItem>\r\n\r\n          <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>UserID</TableCell>\r\n            <TableCell>username</TableCell>\r\n            <TableCell>email</TableCell>\r\n            <TableCell>password</TableCell>\r\n            <TableCell>Actions</TableCell>\r\n          \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {users.map((user) => (\r\n        <TableRow key={user.id}\r\n                  selected={selectedUser?.id === user.id}\r\n                  onClick={() => setSelectedUser(user)}\r\n        >\r\n          <TableCell>{user.id}</TableCell>\r\n          <TableCell>\r\n            {editedUserId === user.id ? (\r\n              <TextField\r\n                value={editedUserName}\r\n                onChange={(e) => setEditedUserName(e.target.value)}\r\n              />\r\n            ) : (\r\n              user.username\r\n            )}\r\n          </TableCell>\r\n          <TableCell>\r\n            {editedUserId === user.id ? (\r\n              <TextField\r\n                value={editedUserEmail}\r\n                onChange={(e) => setEditedUserEmail(e.target.value)}\r\n              />\r\n            ) : (\r\n              user.email\r\n            )}\r\n          </TableCell>\r\n          <TableCell>\r\n            {editedUserId === user.id ? (\r\n              <TextField\r\n                value={editedUserPassword}\r\n                onChange={(e) => setEditedUserPassword(e.target.value)}\r\n              />\r\n            ) : (\r\n              user.password\r\n            )}\r\n          </TableCell>\r\n          <TableCell>\r\n          <FormControlLabel\r\n    control={<Checkbox checked={editedUserAdmin} onChange={() => setEditedUserAdmin(!editedUserAdmin)} />}\r\n    label=\"Admin\"\r\n  />\r\n    </TableCell>\r\n          <TableCell>\r\n            <IconButton onClick={() => handleUpdateUser(user.id)}>\r\n              <CheckCircleIcon />\r\n            </IconButton>\r\n            <IconButton onClick={() => handleEditUser(user.id)}>\r\n              <EditIcon />\r\n            </IconButton>\r\n            <IconButton onClick={() => handleDeleteUser(user.id)}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </TableCell>\r\n        </TableRow>\r\n      ))}\r\n      <TextField\r\n  label=\"Username\"\r\n  variant=\"outlined\"\r\n  value={newUsername}\r\n  onChange={(e) => setNewUsername(e.target.value)}\r\n/>\r\n    </TableBody>\r\n    \r\n  </Table>\r\n  <TextField\r\n  label=\"Email\"\r\n  variant=\"outlined\"\r\n  value={newEmail}\r\n  onChange={(e) => setNewEmail(e.target.value)}\r\n/>\r\n<TextField\r\n  label=\"Password\"\r\n  variant=\"outlined\"\r\n  type=\"password\"\r\n  value={newPassword}\r\n  onChange={(e) => setNewPassword(e.target.value)}\r\n/>\r\n<FormControlLabel\r\n  control={<Checkbox checked={isAdmin} onChange={() => setIsAdmin(!isAdmin)} />}\r\n  label=\"Admin\"\r\n/>\r\n<Button onClick={handleAddUser} startIcon={<AddIcon />}>\r\n  Add User\r\n</Button>\r\n\r\n</TableContainer>   \r\n    <ListItem\r\n          button\r\n          selected={!selectedUser}\r\n          onClick={() => ReadAllCategories()}\r\n        >\r\n          <ListItemText primary=\"All Categories\" />\r\n          </ListItem>\r\n    <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Category ID</TableCell>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Actions</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {categories.map((category) => (\r\n            <TableRow key={category.categoryId}\r\n            selected={selectedCategory?.categoryId === category.categoryId}\r\n            onClick={() => setSelectedCategory(category)}>\r\n              <TableCell>{category.categoryId}</TableCell>\r\n              <TableCell>\r\n                  {editedCategoryId === category.categoryId ? (\r\n                    <TextField\r\n                      value={editedCategoryName}\r\n                      onChange={(e) => setEditedCategoryName(e.target.value)}\r\n                    />\r\n                  ) : (\r\n                    category.name\r\n                  )}\r\n                 </TableCell>           \r\n              <TableCell>\r\n              <IconButton onClick={() => handleUpdateCategory(category.categoryId)}>\r\n                  <CheckCircleIcon />\r\n                </IconButton>\r\n                <IconButton onClick={() => handleEditCategory(category.categoryId)}>\r\n                  <EditIcon />\r\n                </IconButton>\r\n                <IconButton onClick={() => handleDeleteCategory(category)}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </TableCell>\r\n                   {/* Add New Category */}\r\n     \r\n            </TableRow>\r\n          ))}\r\n           <TextField\r\n        label=\"New Category\"\r\n        variant=\"outlined\"\r\n        value={newCategory}\r\n        onChange={(e) => setNewCategory(e.target.value)}\r\n      />\r\n      <Button onClick={handleAddCategory} startIcon={<AddIcon />}>\r\n        Add Category\r\n      </Button>\r\n\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    <ListItem\r\n          button\r\n          selected={!selectedUser}\r\n          onClick={() => ReadAllTasks()}\r\n        >\r\n          <ListItemText primary=\"All Tasks\" />\r\n          </ListItem>\r\n\r\n          <TableContainer>\r\n  <Table>\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell>TaskId</TableCell>\r\n        <TableCell>Task</TableCell>\r\n        <TableCell>Description</TableCell>\r\n        <TableCell>Status</TableCell>\r\n        <TableCell>Priority</TableCell>\r\n        <TableCell>Due Date</TableCell>\r\n        <TableCell>Actions</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n    <TableBody>\r\n      {tasks.map((task) => (\r\n        <TableRow key={task.taskId}>\r\n          <TableCell>{task.taskId}</TableCell>\r\n          <TableCell>\r\n            {editedTaskId === task.taskId ? (\r\n              <TextField\r\n                value={editedTaskTitle}\r\n                onChange={(e) => setEditedTaskTitle(e.target.value)}\r\n              />\r\n            ) : (\r\n              task.title\r\n            )}\r\n          </TableCell>\r\n          <TableCell>\r\n            {editedTaskId === task.taskId ? (\r\n              <TextField\r\n                value={editedTaskDescription}\r\n                onChange={(e) => setEditedTaskDescription(e.target.value)}\r\n              />\r\n            ) : (\r\n              task.description\r\n            )}\r\n          </TableCell>\r\n          <TableCell>\r\n            {editedTaskId === task.taskId ? (\r\n              <TextField\r\n                value={editedTaskStatus}\r\n                onChange={(e) => setEditedTaskStatus(e.target.value)}\r\n              />\r\n            ) : (\r\n              task.status\r\n            )}\r\n          </TableCell>\r\n          <TableCell>\r\n            {editedTaskId === task.taskId ? (\r\n              <TextField\r\n                type=\"number\"\r\n                value={editedTaskPriority}\r\n                onChange={(e) => setEditedTaskPriority(Number(e.target.value))}\r\n              />\r\n            ) : (\r\n              task.priority\r\n            )}\r\n          </TableCell>\r\n          <TableCell>\r\n            {editedTaskId === task.taskId ? (\r\n              <TextField\r\n                type=\"date\"\r\n                value={editedTaskDueDate?.toISOString().split(\"T\")[0]}\r\n                onChange={(e) => setEditedTaskDueDate(new Date(e.target.value))}\r\n              />\r\n            ) : (\r\n              new Date(task.dueDate).toLocaleDateString()\r\n            )}\r\n          </TableCell>\r\n          <TableCell>\r\n            <IconButton onClick={() => handleUpdateTask(task.taskId)}>\r\n              <CheckCircleIcon />\r\n            </IconButton>\r\n            <IconButton onClick={() => handleEditTask(task.taskId)}>\r\n              <EditIcon />\r\n            </IconButton>\r\n            <IconButton onClick={() => handleDeleteTask(task)}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </TableCell>\r\n        </TableRow>\r\n      ))}\r\n    </TableBody>\r\n  </Table>\r\n  <TextField\r\n  label=\"Title\"\r\n  variant=\"outlined\"\r\n  value={newTaskTitle}\r\n  onChange={(e) => setNewTaskTitle(e.target.value)}\r\n/>\r\n<TextField\r\n  label=\"Description\"\r\n  variant=\"outlined\"\r\n  value={newTaskDescription}\r\n  onChange={(e) => setNewTaskDescription(e.target.value)}\r\n/>\r\n<TextField\r\n  label=\"Status\"\r\n  variant=\"outlined\"\r\n  value={newTaskStatus}\r\n  onChange={(e) => setNewTaskStatus(e.target.value)}\r\n/>\r\n<TextField\r\n  type=\"number\"\r\n  label=\"Priority\"\r\n  variant=\"outlined\"\r\n  value={newTaskPriority}\r\n  onChange={(e) => setNewTaskPriority(Number(e.target.value))}\r\n/>\r\n<TextField\r\n  type=\"date\"\r\n  label=\"Due Date\"\r\n  variant=\"outlined\"\r\n  value={newTaskDueDate?.toISOString().split(\"T\")[0] || \"\"}\r\n  onChange={(e) => setNewTaskDueDate(new Date(e.target.value))}\r\n/>\r\n<Button onClick={handleAddTask} startIcon={<AddIcon />}>\r\n  Add Task\r\n</Button>\r\n</TableContainer>\r\n\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}