{"ast":null,"code":"var _jsxFileName = \"D:\\\\PlannerApp\\\\Proiect REact\\\\frontend\\\\src\\\\Pages\\\\Tasks.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, TextField, List, ListItem, ListItemText } from \"@mui/material\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [userId, setId] = useState();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [categories, setCategories] = useState([\"Category 1\", \"Category 2\", \"Category 3\"]);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [tasks, setTasks] = useState([\"Task 1\", \"Task 2\", \"Task 3\"]);\n  const [newTask, setNewTask] = useState(\"\");\n  const ReadAll = event => {\n    try {\n      axios.get('http://localhost:8081/Task/ReadAll', {}).then(response => {\n        localStorage.setItem(\"\", JSON.stringify(response.data));\n        console.log('Import succesful', response.data);\n        setSelectedCategory(selectedCategory);\n      });\n    } catch (error) {\n      console.error('Import failed', error.message);\n    }\n  };\n  const handleAddCategory = () => {\n    if (newCategory.trim() !== \"\") {\n      setCategories([...categories, newCategory]);\n      setNewCategory(\"\");\n    }\n  };\n  const handleAddTask = () => {\n    if (newTask.trim() !== \"\") {\n      setTasks([...tasks, newTask]);\n      setNewTask(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        objectFit: \"fill\",\n        opacity: 1,\n        zIndex: -3\n      },\n      src: require('../images/jpeg.jpeg'),\n      alt: \"Background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 30,\n        padding: \"60px\",\n        overflow: \"scroll\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          selected: selectedCategory === category,\n          onClick: () => ReadAll(category),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"New Category\",\n        variant: \"outlined\",\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleAddCategory,\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: \"40px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Tasks for \", selectedCategory || \"All Categories\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: task\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"New Task\",\n        variant: \"outlined\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"wnTGMNIAOvYPqIUnmip62WfpXCg=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","Button","TextField","List","ListItem","ListItemText","axios","jsxDEV","_jsxDEV","Tasks","_s","userId","setId","selectedCategory","setSelectedCategory","categories","setCategories","newCategory","setNewCategory","tasks","setTasks","newTask","setNewTask","ReadAll","event","get","then","response","localStorage","setItem","JSON","stringify","data","console","log","error","message","handleAddCategory","trim","handleAddTask","style","display","children","position","top","left","width","height","objectFit","opacity","zIndex","src","require","alt","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","padding","overflow","map","category","button","selected","onClick","primary","label","variant","value","onChange","e","target","color","flex","task","index","_c","$RefreshReg$"],"sources":["D:/PlannerApp/Proiect REact/frontend/src/Pages/Tasks.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, TextField, List, ListItem, ListItemText } from \"@mui/material\";\r\nimport { loginButtonStyle, parentDivStyle } from \"./Login.styles\";\r\nimport axios from 'axios';\r\n\r\nconst Tasks = (): JSX.Element => {\r\n  const [userId, setId] =useState<int>()\r\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\r\n  const [categories, setCategories] = useState<string[]>([\"Category 1\", \"Category 2\", \"Category 3\"]);\r\n  const [newCategory, setNewCategory] = useState<string>(\"\");\r\n  const [tasks, setTasks] = useState<string[]>([\"Task 1\", \"Task 2\", \"Task 3\"]);\r\n  const [newTask, setNewTask] = useState<string>(\"\");\r\n\r\n  const ReadAll = (event:any): void => {\r\n     try {\r\n        axios.get('http://localhost:8081/Task/ReadAll', {\r\n           \r\n            \r\n        }).then(response=> {    localStorage.setItem(\"\", JSON.stringify(response.data));\r\n        console.log('Import succesful', response.data);\r\n        setSelectedCategory(selectedCategory);\r\n    });       \r\n\r\n    } catch (error) {\r\n        console.error('Import failed', (error as Error).message);\r\n    }\r\n   \r\n  };\r\n\r\n  const handleAddCategory = () => {\r\n    if (newCategory.trim() !== \"\") {\r\n      setCategories([...categories, newCategory]);\r\n      setNewCategory(\"\");\r\n    }\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    if (newTask.trim() !== \"\") {\r\n      setTasks([...tasks, newTask]);\r\n      setNewTask(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n         <img\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    objectFit: \"fill\",  \r\n                    opacity: 1,  \r\n                    zIndex:-3\r\n                }}\r\n                src={require('../images/jpeg.jpeg')} \r\n                alt=\"Background\"\r\n            />\r\n      \r\n      <div style={{marginTop:30, padding: \"60px\", overflow: \"scroll\" }}>\r\n        <List>\r\n          { categories.map((category) => (\r\n            <ListItem\r\n              key={category}\r\n              button\r\n              selected={selectedCategory === category}\r\n              onClick={() => ReadAll(category)}\r\n            >\r\n              <ListItemText primary={category} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <TextField\r\n          label=\"New Category\"\r\n          variant=\"outlined\"\r\n          value={newCategory}\r\n          onChange={(e) => setNewCategory(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleAddCategory}>\r\n          Add Category\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Right side - Tasks for the selected category */}\r\n      <div style={{flex: 1, padding: \"40px\"}}>\r\n        <h2>Tasks for {selectedCategory || \"All Categories\"}</h2>\r\n        <ul>\r\n          {tasks.map((task, index) => (\r\n            <li key={index}>{task}</li>\r\n          ))}\r\n        </ul>\r\n        <TextField\r\n          label=\"New Task\"\r\n          variant=\"outlined\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleAddTask}>\r\n          Add Task\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,SAAS,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,eAAe;AAE/E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAmB;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,EAAEC,KAAK,CAAC,GAAEZ,QAAQ,CAAM,CAAC;EACtC,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAgB,IAAI,CAAC;EAC7E,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAW,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;EAClG,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAS,EAAE,CAAC;EAC1D,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAW,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;EAC5E,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAS,EAAE,CAAC;EAElD,MAAMuB,OAAO,GAAIC,KAAS,IAAW;IAClC,IAAI;MACDlB,KAAK,CAACmB,GAAG,CAAC,oCAAoC,EAAE,CAGhD,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAG;QAAKC,YAAY,CAACC,OAAO,CAAC,EAAE,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAC/EC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEP,QAAQ,CAACK,IAAI,CAAC;QAC9ClB,mBAAmB,CAACD,gBAAgB,CAAC;MACzC,CAAC,CAAC;IAEF,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,eAAe,EAAGA,KAAK,CAAWC,OAAO,CAAC;IAC5D;EAEF,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIpB,WAAW,CAACqB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC7BtB,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEE,WAAW,CAAC,CAAC;MAC3CC,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,MAAMqB,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIlB,OAAO,CAACiB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACzBlB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEE,OAAO,CAAC,CAAC;MAC7BC,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACEd,OAAA;IAAKgC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC3BlC,OAAA;MACOgC,KAAK,EAAE;QACHG,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,SAAS,EAAE,MAAM;QACjBC,OAAO,EAAE,CAAC;QACVC,MAAM,EAAC,CAAC;MACZ,CAAE;MACFC,GAAG,EAAEC,OAAO,CAAC,qBAAqB,CAAE;MACpCC,GAAG,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eAERjD,OAAA;MAAKgC,KAAK,EAAE;QAACkB,SAAS,EAAC,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAS,CAAE;MAAAlB,QAAA,gBAC/DlC,OAAA,CAACL,IAAI;QAAAuC,QAAA,EACD3B,UAAU,CAAC8C,GAAG,CAAEC,QAAQ,iBACxBtD,OAAA,CAACJ,QAAQ;UAEP2D,MAAM;UACNC,QAAQ,EAAEnD,gBAAgB,KAAKiD,QAAS;UACxCG,OAAO,EAAEA,CAAA,KAAM1C,OAAO,CAACuC,QAAQ,CAAE;UAAApB,QAAA,eAEjClC,OAAA,CAACH,YAAY;YAAC6D,OAAO,EAAEJ;UAAS;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GAL9BK,QAAQ;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAML,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACPjD,OAAA,CAACN,SAAS;QACRiE,KAAK,EAAC,cAAc;QACpBC,OAAO,EAAC,UAAU;QAClBC,KAAK,EAAEpD,WAAY;QACnBqD,QAAQ,EAAGC,CAAC,IAAKrD,cAAc,CAACqD,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACFjD,OAAA,CAACP,MAAM;QAACmE,OAAO,EAAC,WAAW;QAACK,KAAK,EAAC,SAAS;QAACR,OAAO,EAAE5B,iBAAkB;QAAAK,QAAA,EAAC;MAExE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNjD,OAAA;MAAKgC,KAAK,EAAE;QAACkC,IAAI,EAAE,CAAC;QAAEf,OAAO,EAAE;MAAM,CAAE;MAAAjB,QAAA,gBACrClC,OAAA;QAAAkC,QAAA,GAAI,YAAU,EAAC7B,gBAAgB,IAAI,gBAAgB;MAAA;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzDjD,OAAA;QAAAkC,QAAA,EACGvB,KAAK,CAAC0C,GAAG,CAAC,CAACc,IAAI,EAAEC,KAAK,kBACrBpE,OAAA;UAAAkC,QAAA,EAAiBiC;QAAI,GAAZC,KAAK;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAC3B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACLjD,OAAA,CAACN,SAAS;QACRiE,KAAK,EAAC,UAAU;QAChBC,OAAO,EAAC,UAAU;QAClBC,KAAK,EAAEhD,OAAQ;QACfiD,QAAQ,EAAGC,CAAC,IAAKjD,UAAU,CAACiD,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACFjD,OAAA,CAACP,MAAM;QAACmE,OAAO,EAAC,WAAW;QAACK,KAAK,EAAC,SAAS;QAACR,OAAO,EAAE1B,aAAc;QAAAG,QAAA,EAAC;MAEpE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/C,EAAA,CAnGID,KAAK;AAAAoE,EAAA,GAALpE,KAAK;AAqGX,eAAeA,KAAK;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}