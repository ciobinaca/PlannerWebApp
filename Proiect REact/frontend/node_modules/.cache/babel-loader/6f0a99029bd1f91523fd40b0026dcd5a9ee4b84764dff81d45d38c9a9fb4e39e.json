{"ast":null,"code":"var _jsxFileName = \"D:\\\\PlannerApp\\\\Proiect REact\\\\frontend\\\\src\\\\Pages\\\\Admin.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, TextField, List, ListItem, ListItemText, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport axios from 'axios';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [reminders, setReminders] = useState([]);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newTask, setNewTask] = useState(\"\");\n  const [newUser, setNewUser] = useState(\"\");\n  const [newReminder, setNewReminder] = useState(\"\");\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [editedCategoryId, setEditedCategoryId] = useState(null);\n  const [editedCategoryName, setEditedCategoryName] = useState(\"\");\n  const ReadAllUsers = () => {\n    try {\n      axios.get(`http://localhost:8081/User/ReadAll`, {}).then(response => {\n        localStorage.setItem(\"userii\", JSON.stringify(response.data));\n        setUsers(response.data);\n        console.log('Import succesful', response.data);\n      });\n    } catch (error) {\n      console.error('Import failed', error.message);\n    }\n  };\n  const ReadAllCategories = () => {\n    //setSelectedUser(user);\n    try {\n      axios.get(`http://localhost:8081/Category/ReadAll`, {}).then(response => {\n        localStorage.setItem(\"categorii\", JSON.stringify(response.data));\n        setCategories(response.data);\n        console.log('Import succesful', response.data);\n\n        // const approachingDate = new Date(taskDue.getTime() - 24 * 60 * 60 * 1000); // 1 day before\n        // const currentDate = new Date();\n\n        // if (currentDate < approachingDate) {\n      });\n    } catch (error) {\n      console.error('Import failed', error.message);\n    }\n  };\n  const handleUserClick = user => {\n    setSelectedUser(user);\n  };\n  const handleAddCategory = () => {\n    // Implement logic for adding a new category\n  };\n  const handleAddTask = () => {\n    // Implement logic for adding a new task\n  };\n  const handleAddUser = () => {\n    // Implement logic for adding a new user\n  };\n  const handleAddReminder = () => {\n    // Implement logic for adding a new reminder\n  };\n  const handleDeleteCategory = categoryId => {\n    // Implement logic for deleting a category\n  };\n  const handleDeleteTask = taskId => {\n    // Implement logic for deleting a task\n  };\n  const handleDeleteUser = userId => {\n    // Implement logic for deleting a user\n  };\n  const handleDeleteReminder = reminderId => {\n    // Implement logic for deleting a reminder\n  };\n  const handleEditCategory = categoryId => {\n    const categoryToEdit = categories.find(category => category.categoryId === categoryId);\n    if (categoryToEdit) {\n      setEditedCategoryId(categoryId);\n      setEditedCategoryName(categoryToEdit.name);\n    }\n  };\n  const handleUpdateCategory = categoryId => {\n    try {\n      axios.put(`http://localhost:8081/Category/Update`, {\n        categoryId: categoryId,\n        name: editedCategoryName\n      }).then(response => {\n        localStorage.setItem(\"categorii\", JSON.stringify(response.data));\n        setCategories([...categories, response.data]);\n        console.log('Import succesful', response.data);\n      });\n    } catch (error) {\n      console.error('Import failed', error.message);\n    }\n  };\n  const handleEditTask = taskId => {\n    // Implement logic for editing a task\n  };\n  const handleEditUser = userId => {\n    // Implement logic for editing a user\n  };\n  const handleEditReminder = reminderId => {\n    // Implement logic for editing a reminder\n  };\n  useEffect(() => {}, [selectedUser]);\n  const renderTables = selectedUser => {\n    if (!selectedUser) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select a user from the list.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"New Category\",\n        variant: \"outlined\",\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAddCategory,\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 54\n        }, this),\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      style: {\n        overflow: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        selected: !selectedUser,\n        onClick: () => ReadAllUsers(),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"All Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"UserID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: users.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEditUser(user.id),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDeleteUser(user.id),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 15\n              }, this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        selected: !selectedUser,\n        onClick: () => ReadAllCategories(),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Category ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [categories.map(category => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: category.categoryId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: editedCategoryId === category.categoryId ? /*#__PURE__*/_jsxDEV(TextField, {\n                  value: editedCategoryName,\n                  onChange: e => setEditedCategoryName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 21\n                }, this) : category.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleUpdateCategory(category.categoryId),\n                  children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEditCategory(category.categoryId),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDeleteCategory(category.categoryId),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 15\n              }, this)]\n            }, category.categoryId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 13\n            }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"New Category\",\n              variant: \"outlined\",\n              value: newCategory,\n              onChange: e => setNewCategory(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleAddCategory,\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 54\n              }, this),\n              children: \"Add Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        selected: !selectedUser,\n        onClick: () => ReadAllUsers(),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"All Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"TaskId\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: users.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEditUser(user.id),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDeleteUser(user.id),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 15\n              }, this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"Nw3TzmW59gg9h3RKL7WxSZ4IthM=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","Button","TextField","List","ListItem","ListItemText","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","DeleteIcon","EditIcon","AddIcon","axios","CheckCircleIcon","jsxDEV","_jsxDEV","AdminPage","_s","categories","setCategories","tasks","setTasks","users","setUsers","reminders","setReminders","newCategory","setNewCategory","newTask","setNewTask","newUser","setNewUser","newReminder","setNewReminder","selectedUser","setSelectedUser","editedCategoryId","setEditedCategoryId","editedCategoryName","setEditedCategoryName","ReadAllUsers","get","then","response","localStorage","setItem","JSON","stringify","data","console","log","error","message","ReadAllCategories","handleUserClick","user","handleAddCategory","handleAddTask","handleAddUser","handleAddReminder","handleDeleteCategory","categoryId","handleDeleteTask","taskId","handleDeleteUser","userId","handleDeleteReminder","reminderId","handleEditCategory","categoryToEdit","find","category","name","handleUpdateCategory","put","handleEditTask","handleEditUser","handleEditReminder","renderTables","children","fileName","_jsxFileName","lineNumber","columnNumber","label","variant","value","onChange","e","target","onClick","startIcon","style","overflow","button","selected","primary","map","id","username","email","password","_c","$RefreshReg$"],"sources":["D:/PlannerApp/Proiect REact/frontend/src/Pages/Admin.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {Button, TextField, List, ListItem, ListItemText, IconButton, \r\n    Table, TableBody, TableCell, TableContainer, TableHead, TableRow,} from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport axios from 'axios';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\n\r\ninterface Category {\r\n  categoryId: number;\r\n  name: string;\r\n}\r\n\r\ninterface Task {\r\n  taskId: number;\r\n  priority: number;\r\n  title: string;\r\n  description: string;\r\n  status: string;\r\n  dueDate: Date;\r\n}\r\n\r\ninterface User {\r\n  id: number;\r\n  username: string;\r\n  email:string;\r\n  password:string;\r\n  admin:Boolean;\r\n  \r\n}\r\n\r\ninterface Reminder {\r\n  reminderId: number;\r\n  userId: number;\r\n  taskId: number;\r\n  // other reminder properties...\r\n}\r\n\r\nconst AdminPage = (): JSX.Element => {\r\n  const [categories, setCategories] = useState<Category[]>([]);\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [reminders, setReminders] = useState<Reminder[]>([]);\r\n  const [newCategory, setNewCategory] = useState<string>(\"\");\r\n  const [newTask, setNewTask] = useState<string>(\"\");\r\n  const [newUser, setNewUser] = useState<string>(\"\");\r\n  const [newReminder, setNewReminder] = useState<string>(\"\");\r\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\r\n  const [editedCategoryId, setEditedCategoryId] = useState<number | null>(null);\r\n  const [editedCategoryName, setEditedCategoryName] = useState<string>(\"\");\r\n\r\n  const ReadAllUsers=(): void =>{\r\n\r\n    try {\r\n        axios.get(`http://localhost:8081/User/ReadAll`, {\r\n        }).then(response=> { \r\n        localStorage.setItem(\"userii\", JSON.stringify(response.data));\r\n        setUsers(response.data);\r\n        console.log('Import succesful', response.data);\r\n        \r\n    });       \r\n  \r\n    } catch (error) {\r\n        console.error('Import failed', (error as Error).message);\r\n    }\r\n   \r\n\r\n  }\r\n\r\n  const ReadAllCategories = (): void => {\r\n    //setSelectedUser(user);\r\n    try {\r\n       axios.get(`http://localhost:8081/Category/ReadAll`, {\r\n       }).then(response=> { \r\n       localStorage.setItem(\"categorii\", JSON.stringify(response.data));\r\n       setCategories(response.data);\r\n       console.log('Import succesful', response.data);\r\n       \r\n       // const approachingDate = new Date(taskDue.getTime() - 24 * 60 * 60 * 1000); // 1 day before\r\n       // const currentDate = new Date();\r\n \r\n       // if (currentDate < approachingDate) {\r\n   });       \r\n \r\n   } catch (error) {\r\n       console.error('Import failed', (error as Error).message);\r\n   }\r\n  \r\n };\r\n\r\n  const handleUserClick = (user: User | null) => {\r\n    setSelectedUser(user);\r\n  };\r\n\r\n  const handleAddCategory = () => {\r\n    // Implement logic for adding a new category\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    // Implement logic for adding a new task\r\n  };\r\n\r\n  const handleAddUser = () => {\r\n    // Implement logic for adding a new user\r\n  };\r\n\r\n  const handleAddReminder = () => {\r\n    // Implement logic for adding a new reminder\r\n  };\r\n\r\n  const handleDeleteCategory = (categoryId: number) => {\r\n    // Implement logic for deleting a category\r\n  };\r\n\r\n  const handleDeleteTask = (taskId: number) => {\r\n    // Implement logic for deleting a task\r\n  };\r\n\r\n  const handleDeleteUser = (userId: number) => {\r\n    // Implement logic for deleting a user\r\n  };\r\n\r\n  const handleDeleteReminder = (reminderId: number) => {\r\n    // Implement logic for deleting a reminder\r\n  };\r\n\r\n  const handleEditCategory = (categoryId: number) => {\r\n    const categoryToEdit = categories.find((category) => category.categoryId === categoryId);\r\n\r\n    if (categoryToEdit) {\r\n      setEditedCategoryId(categoryId);\r\n      setEditedCategoryName(categoryToEdit.name);}\r\n    \r\n     \r\n  };\r\n\r\n  const handleUpdateCategory = (categoryId: number) => {\r\n    \r\n      try {\r\n        axios.put(`http://localhost:8081/Category/Update`, {\r\n            categoryId: categoryId,\r\n            name:editedCategoryName\r\n        }).then(response=> { \r\n        localStorage.setItem(\"categorii\", JSON.stringify(response.data));\r\n        setCategories([...categories, response.data]);\r\n        console.log('Import succesful', response.data);\r\n        \r\n    });       \r\n  \r\n    } catch (error) {\r\n        console.error('Import failed', (error as Error).message);\r\n    }\r\n  };\r\n\r\n\r\n  const handleEditTask = (taskId: number) => {\r\n    // Implement logic for editing a task\r\n  };\r\n\r\n  const handleEditUser = (userId: number) => {\r\n    // Implement logic for editing a user\r\n  };\r\n\r\n  const handleEditReminder = (reminderId: number) => {\r\n    // Implement logic for editing a reminder\r\n  };\r\n\r\n  useEffect(() => {\r\n      \r\n  }, [selectedUser]);\r\n\r\n  const renderTables = (selectedUser: User | null) => { \r\n    if (!selectedUser) {\r\n      return <p>Please select a user from the list.</p>;\r\n    }\r\n    return (\r\n        <div>\r\n            \r\n         {/* Categories Table */}\r\n     \r\n    {/* Tasks Table */}\r\n    <TableContainer>\r\n      {/* Similar structure for Tasks Table */}\r\n    </TableContainer>\r\n\r\n\r\n    {/* Reminders Table */}\r\n    <TableContainer>\r\n      {/* Similar structure for Reminders Table */}\r\n    </TableContainer>\r\n\r\n    \r\n      {/* Add New Category */}\r\n      <TextField\r\n        label=\"New Category\"\r\n        variant=\"outlined\"\r\n        value={newCategory}\r\n        onChange={(e) => setNewCategory(e.target.value)}\r\n      />\r\n      <Button onClick={handleAddCategory} startIcon={<AddIcon />}>\r\n        Add Category\r\n      </Button>\r\n\r\n      {/* Add New Task */}\r\n      {/* Similar structure for Add New Task */}\r\n\r\n      \r\n\r\n      {/* Add New Reminder */}\r\n      {/* Similar structure for Add New Reminder */}\r\n    </div>\r\n    );\r\n    \r\n};\r\n\r\n  return (\r\n    <div>\r\n      <h2>Admin Page</h2>\r\n       \r\n       \r\n      <List style={{overflow: \"auto\"}}>\r\n        <ListItem\r\n          button\r\n          selected={!selectedUser}\r\n          onClick={() => ReadAllUsers()}\r\n        >\r\n          <ListItemText primary=\"All Users\" />\r\n          </ListItem>\r\n\r\n          <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>UserID</TableCell>\r\n            <TableCell>email</TableCell>\r\n            <TableCell>username</TableCell>\r\n            <TableCell>password</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {users.map((user) => (\r\n            <TableRow key={user.id}>\r\n              <TableCell>{user.id}</TableCell>\r\n              <TableCell>{user.username}</TableCell>  \r\n              <TableCell>{user.email}</TableCell>\r\n              <TableCell>{user.password}</TableCell>\r\n              <TableCell>\r\n                <IconButton onClick={() => handleEditUser(user.id)}>\r\n                  <EditIcon />\r\n                </IconButton>\r\n                <IconButton onClick={() => handleDeleteUser(user.id)}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>    \r\n    <ListItem\r\n          button\r\n          selected={!selectedUser}\r\n          onClick={() => ReadAllCategories()}\r\n        >\r\n          <ListItemText primary=\"All Categories\" />\r\n          </ListItem>\r\n    <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Category ID</TableCell>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Actions</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {categories.map((category) => (\r\n            <TableRow key={category.categoryId}>\r\n              <TableCell>{category.categoryId}</TableCell>\r\n              <TableCell>\r\n                  {editedCategoryId === category.categoryId ? (\r\n                    <TextField\r\n                      value={editedCategoryName}\r\n                      onChange={(e) => setEditedCategoryName(e.target.value)}\r\n                    />\r\n                  ) : (\r\n                    category.name\r\n                  )}\r\n                 </TableCell>           \r\n              {/* //<TableCell>{category.name}</TableCell> */}\r\n              <TableCell>\r\n              <IconButton onClick={() => handleUpdateCategory(category.categoryId)}>\r\n                  <CheckCircleIcon />\r\n                </IconButton>\r\n                <IconButton onClick={() => handleEditCategory(category.categoryId)}>\r\n                  <EditIcon />\r\n                </IconButton>\r\n                <IconButton onClick={() => handleDeleteCategory(category.categoryId)}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </TableCell>\r\n                   {/* Add New Category */}\r\n     \r\n            </TableRow>\r\n          ))}\r\n           <TextField\r\n        label=\"New Category\"\r\n        variant=\"outlined\"\r\n        value={newCategory}\r\n        onChange={(e) => setNewCategory(e.target.value)}\r\n      />\r\n      <Button onClick={handleAddCategory} startIcon={<AddIcon />}>\r\n        Add Category\r\n      </Button>\r\n\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    <ListItem\r\n          button\r\n          selected={!selectedUser}\r\n          onClick={() => ReadAllUsers()}\r\n        >\r\n          <ListItemText primary=\"All Users\" />\r\n          </ListItem>\r\n\r\n          <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>TaskId</TableCell>\r\n            <TableCell>Task</TableCell>\r\n            <TableCell>Description</TableCell>\r\n            <TableCell></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {users.map((user) => (\r\n            <TableRow key={user.id}>\r\n              <TableCell>{user.id}</TableCell>\r\n              <TableCell>{user.username}</TableCell>  \r\n              <TableCell>{user.email}</TableCell>\r\n              <TableCell>{user.password}</TableCell>\r\n              <TableCell>\r\n                <IconButton onClick={() => handleEditUser(user.id)}>\r\n                  <EditIcon />\r\n                </IconButton>\r\n                <IconButton onClick={() => handleDeleteUser(user.id)}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>  \r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}