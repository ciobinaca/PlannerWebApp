{"ast":null,"code":"var _jsxFileName = \"D:\\\\PlannerApp\\\\Proiect REact\\\\frontend\\\\src\\\\Pages\\\\Admin.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, TextField, List, ListItem, ListItemText, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, FormControlLabel } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport axios from 'axios';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [reminders, setReminders] = useState([]);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newTask, setNewTask] = useState(\"\");\n  const [newUser, setNewUser] = useState(\"\");\n  const [newReminder, setNewReminder] = useState(\"\");\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [editedCategoryId, setEditedCategoryId] = useState(null);\n  const [editedCategoryName, setEditedCategoryName] = useState(\"\");\n  const [editedUserId, setEditedUserId] = useState(null);\n  const [editedUserName, setEditedUserName] = useState(\"\");\n  const [editedUserEmail, setEditedUserEmail] = useState(\"\");\n  const [editedUserPassword, setEditedUserPassword] = useState(\"\");\n  const [editedUserAdmin, setEditedUserAdmin] = useState();\n  const [editedTaskId, setEditedTaskId] = useState(null);\n  const [editedTaskTitle, setEditedTaskTitle] = useState(\"\");\n  const [editedTaskDescription, setEditedTaskDescription] = useState(\"\");\n  const [editedTaskStatus, setEditedTaskStatus] = useState(\"\");\n  const [editedTaskPriority, setEditedTaskPriority] = useState(0);\n  const [editedTaskDueDate, setEditedTaskDueDate] = useState(null);\n  const [newUsername, setNewUsername] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false); // Adjust if needed\n  const [newTaskTitle, setNewTaskTitle] = useState(\"\");\n  const [newTaskDescription, setNewTaskDescription] = useState(\"\");\n  const [newTaskStatus, setNewTaskStatus] = useState(\"\");\n  const [newTaskPriority, setNewTaskPriority] = useState(1); // Default priority, adjust as needed\n  const [newTaskDueDate, setNewTaskDueDate] = useState(null);\n  const ReadAllUsers = () => {\n    try {\n      axios.get(`http://localhost:8081/User/ReadAll`, {}).then(response => {\n        localStorage.setItem(\"userii\", JSON.stringify(response.data));\n        setUsers(response.data);\n        console.log('Import succesful', response.data);\n      });\n    } catch (error) {\n      console.error('Import failed', error.message);\n    }\n  };\n  const ReadAllCategories = () => {\n    try {\n      axios.get(`http://localhost:8081/Category/ReadAll`, {}).then(response => {\n        localStorage.setItem(\"categorii\", JSON.stringify(response.data));\n        setCategories(response.data);\n        console.log('Import succesful', response.data);\n      });\n    } catch (error) {\n      console.error('Import failed', error.message);\n    }\n  };\n  const ReadAllTasks = () => {\n    try {\n      axios.get(`http://localhost:8081/Task/ReadAll`, {}).then(response => {\n        localStorage.setItem(\"tasks\", JSON.stringify(response.data));\n        setTasks(response.data);\n        console.log('Import succesful', response.data);\n      });\n    } catch (error) {\n      console.error('Import failed', error.message);\n    }\n  };\n  const handleUserClick = user => {\n    setSelectedUser(user);\n  };\n  const handleAddCategory = () => {\n    // Implement logic for adding a new category\n  };\n  const handleAddTask = () => {\n    // Implement logic for adding a new task\n  };\n  const handleAddUser = () => {\n    // Implement logic for adding a new user\n  };\n  const handleAddReminder = () => {\n    // Implement logic for adding a new reminder\n  };\n  const handleDeleteCategory = categoryId => {\n    // Implement logic for deleting a category\n  };\n  const handleDeleteTask = taskId => {};\n  const handleDeleteUser = userId => {\n    try {\n      axios.delete(`http://localhost:8081/User/Delete/${userId}`, {}).then(response => {\n        setUsers(currentU => currentU.filter(c => c.id !== userId));\n        console.log('User updated successfully', response.data);\n      });\n    } catch (error) {\n      console.error('User update failed', error.message);\n    }\n  };\n  const handleDeleteReminder = reminderId => {\n    // Implement logic for deleting a reminder\n  };\n  const handleEditCategory = categoryId => {\n    const categoryToEdit = categories.find(category => category.categoryId === categoryId);\n    if (categoryToEdit) {\n      setEditedCategoryId(categoryId);\n      setEditedCategoryName(categoryToEdit.name);\n    }\n  };\n  const handleUpdateCategory = categoryId => {\n    try {\n      axios.put(`http://localhost:8081/Category/Update`, {\n        categoryId: categoryId,\n        name: editedCategoryName\n      }).then(response => {\n        localStorage.setItem(\"categorii\", JSON.stringify(response.data));\n        setCategories([...categories, response.data]);\n        console.log('Import succesful', response.data);\n      });\n    } catch (error) {\n      console.error('Import failed', error.message);\n    }\n  };\n  const handleEditTask = taskId => {\n    const taskToEdit = tasks.find(task => task.taskId === taskId);\n    if (taskToEdit) {\n      setEditedTaskId(taskId);\n      setEditedTaskTitle(taskToEdit.title);\n      setEditedTaskDescription(taskToEdit.description);\n      setEditedTaskStatus(taskToEdit.status);\n      setEditedTaskPriority(taskToEdit.priority);\n      setEditedTaskDueDate(new Date(taskToEdit.dueDate));\n    }\n  };\n  const handleUpdateTask = taskId => {\n    try {\n      axios.put(`http://localhost:8081/Task/Update`, {\n        taskId: taskId,\n        title: editedTaskTitle,\n        description: editedTaskDescription,\n        status: editedTaskStatus,\n        priority: editedTaskPriority,\n        dueDate: editedTaskDueDate === null || editedTaskDueDate === void 0 ? void 0 : editedTaskDueDate.toISOString()\n      }).then(response => {\n        localStorage.setItem(\"tasks\", JSON.stringify(response.data));\n        setTasks([...tasks, response.data]);\n        console.log('Update successful', response.data);\n      });\n    } catch (error) {\n      console.error('Update failed', error.message);\n    } finally {\n      setEditedTaskId(null); // Reset edited task ID\n    }\n  };\n\n  const handleEditUser = userId => {\n    const userToEdit = users.find(user => user.id === userId);\n    if (userToEdit) {\n      setEditedUserId(userId);\n      setEditedUserName(userToEdit.username);\n      setEditedUserEmail(userToEdit.email);\n      setEditedUserPassword(userToEdit.password);\n    }\n  };\n  const handleUpdateUser = userId => {\n    try {\n      axios.put(`http://localhost:8081/User/Update`, {\n        userId: userId,\n        username: editedUserName,\n        email: editedUserEmail,\n        password: editedUserPassword\n      }).then(response => {\n        localStorage.setItem(\"userii\", JSON.stringify(response.data));\n        setUsers([...users, response.data]);\n        console.log('User updated successfully', response.data);\n      });\n    } catch (error) {\n      console.error('User update failed', error.message);\n    }\n  };\n  const handleEditReminder = reminderId => {\n    // Implement logic for editing a reminder\n  };\n  useEffect(() => {}, [selectedUser]);\n  const renderTables = selectedUser => {\n    if (!selectedUser) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select a user from the list.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"New Category\",\n        variant: \"outlined\",\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAddCategory,\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 54\n        }, this),\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      style: {\n        overflow: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        selected: !selectedUser,\n        onClick: () => ReadAllUsers(),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"All Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"UserID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [users.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: editedUserId === user.id ? /*#__PURE__*/_jsxDEV(TextField, {\n                  value: editedUserName,\n                  onChange: e => setEditedUserName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 15\n                }, this) : user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: editedUserId === user.id ? /*#__PURE__*/_jsxDEV(TextField, {\n                  value: editedUserEmail,\n                  onChange: e => setEditedUserEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 15\n                }, this) : user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: editedUserId === user.id ? /*#__PURE__*/_jsxDEV(TextField, {\n                  value: editedUserPassword,\n                  onChange: e => setEditedUserPassword(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 15\n                }, this) : user.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleUpdateUser(user.id),\n                  children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEditUser(user.id),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDeleteUser(user.id),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 11\n              }, this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 9\n            }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Username\",\n              variant: \"outlined\",\n              value: newUsername,\n              onChange: e => setNewUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              variant: \"outlined\",\n              value: newEmail,\n              onChange: e => setNewEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Password\",\n              variant: \"outlined\",\n              type: \"password\",\n              value: newPassword,\n              onChange: e => setNewPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: isAdmin,\n                onChange: () => setIsAdmin(!isAdmin)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 12\n              }, this),\n              label: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleAddUser,\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 44\n              }, this),\n              children: \"Add User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        selected: !selectedUser,\n        onClick: () => ReadAllCategories(),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Category ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [categories.map(category => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: category.categoryId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: editedCategoryId === category.categoryId ? /*#__PURE__*/_jsxDEV(TextField, {\n                  value: editedCategoryName,\n                  onChange: e => setEditedCategoryName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 21\n                }, this) : category.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleUpdateCategory(category.categoryId),\n                  children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEditCategory(category.categoryId),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDeleteCategory(category.categoryId),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 15\n              }, this)]\n            }, category.categoryId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 13\n            }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"New Category\",\n              variant: \"outlined\",\n              value: newCategory,\n              onChange: e => setNewCategory(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleAddCategory,\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 54\n              }, this),\n              children: \"Add Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        selected: !selectedUser,\n        onClick: () => ReadAllTasks(),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"All Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"TaskId\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: tasks.map(task => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: task.taskId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: editedTaskId === task.taskId ? /*#__PURE__*/_jsxDEV(TextField, {\n                  value: editedTaskTitle,\n                  onChange: e => setEditedTaskTitle(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 15\n                }, this) : task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: editedTaskId === task.taskId ? /*#__PURE__*/_jsxDEV(TextField, {\n                  value: editedTaskDescription,\n                  onChange: e => setEditedTaskDescription(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 15\n                }, this) : task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: editedTaskId === task.taskId ? /*#__PURE__*/_jsxDEV(TextField, {\n                  value: editedTaskStatus,\n                  onChange: e => setEditedTaskStatus(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 15\n                }, this) : task.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: editedTaskId === task.taskId ? /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"number\",\n                  value: editedTaskPriority,\n                  onChange: e => setEditedTaskPriority(Number(e.target.value))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 15\n                }, this) : task.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: editedTaskId === task.taskId ? /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"date\",\n                  value: editedTaskDueDate === null || editedTaskDueDate === void 0 ? void 0 : editedTaskDueDate.toISOString().split(\"T\")[0],\n                  onChange: e => setEditedTaskDueDate(new Date(e.target.value))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 15\n                }, this) : new Date(task.dueDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleUpdateTask(task.taskId),\n                  children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEditTask(task.taskId),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDeleteTask(task.taskId),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 560,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 11\n              }, this)]\n            }, task.taskId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"nqcIJ2o4kN/W7xU0BR4md0ZEe1I=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","Button","TextField","List","ListItem","ListItemText","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","FormControlLabel","DeleteIcon","EditIcon","AddIcon","axios","CheckCircleIcon","jsxDEV","_jsxDEV","AdminPage","_s","categories","setCategories","tasks","setTasks","users","setUsers","reminders","setReminders","newCategory","setNewCategory","newTask","setNewTask","newUser","setNewUser","newReminder","setNewReminder","selectedUser","setSelectedUser","editedCategoryId","setEditedCategoryId","editedCategoryName","setEditedCategoryName","editedUserId","setEditedUserId","editedUserName","setEditedUserName","editedUserEmail","setEditedUserEmail","editedUserPassword","setEditedUserPassword","editedUserAdmin","setEditedUserAdmin","editedTaskId","setEditedTaskId","editedTaskTitle","setEditedTaskTitle","editedTaskDescription","setEditedTaskDescription","editedTaskStatus","setEditedTaskStatus","editedTaskPriority","setEditedTaskPriority","editedTaskDueDate","setEditedTaskDueDate","newUsername","setNewUsername","newEmail","setNewEmail","newPassword","setNewPassword","isAdmin","setIsAdmin","newTaskTitle","setNewTaskTitle","newTaskDescription","setNewTaskDescription","newTaskStatus","setNewTaskStatus","newTaskPriority","setNewTaskPriority","newTaskDueDate","setNewTaskDueDate","ReadAllUsers","get","then","response","localStorage","setItem","JSON","stringify","data","console","log","error","message","ReadAllCategories","ReadAllTasks","handleUserClick","user","handleAddCategory","handleAddTask","handleAddUser","handleAddReminder","handleDeleteCategory","categoryId","handleDeleteTask","taskId","handleDeleteUser","userId","delete","currentU","filter","c","id","handleDeleteReminder","reminderId","handleEditCategory","categoryToEdit","find","category","name","handleUpdateCategory","put","handleEditTask","taskToEdit","task","title","description","status","priority","Date","dueDate","handleUpdateTask","toISOString","handleEditUser","userToEdit","username","email","password","handleUpdateUser","handleEditReminder","renderTables","children","fileName","_jsxFileName","lineNumber","columnNumber","label","variant","value","onChange","e","target","onClick","startIcon","style","overflow","button","selected","primary","map","type","control","Checkbox","checked","Number","split","toLocaleDateString","_c","$RefreshReg$"],"sources":["D:/PlannerApp/Proiect REact/frontend/src/Pages/Admin.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {Button, TextField, List, ListItem, ListItemText, IconButton, \r\n    Table, TableBody, TableCell, TableContainer, TableHead, TableRow, FormControlLabel,} from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport axios from 'axios';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\n\r\ninterface Category {\r\n  categoryId: number;\r\n  name: string;\r\n}\r\n\r\ninterface Task {\r\n  taskId: number;\r\n  priority: number;\r\n  title: string;\r\n  description: string;\r\n  status: string;\r\n  dueDate: Date;\r\n}\r\n\r\ninterface User {\r\n  id: number;\r\n  username: string;\r\n  email:string;\r\n  password:string;\r\n  admin:Boolean;\r\n  \r\n}\r\n\r\ninterface Reminder {\r\n  reminderId: number;\r\n  userId: number;\r\n  taskId: number;\r\n  // other reminder properties...\r\n}\r\n\r\nconst AdminPage = (): JSX.Element => {\r\n  const [categories, setCategories] = useState<Category[]>([]);\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [reminders, setReminders] = useState<Reminder[]>([]);\r\n  const [newCategory, setNewCategory] = useState<string>(\"\");\r\n  const [newTask, setNewTask] = useState<string>(\"\");\r\n  const [newUser, setNewUser] = useState<string>(\"\");\r\n  const [newReminder, setNewReminder] = useState<string>(\"\");\r\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\r\n  const [editedCategoryId, setEditedCategoryId] = useState<number | null>(null);\r\n  const [editedCategoryName, setEditedCategoryName] = useState<string>(\"\");\r\n  const [editedUserId, setEditedUserId] = useState<number | null>(null);\r\nconst [editedUserName, setEditedUserName] = useState<string>(\"\");\r\nconst [editedUserEmail, setEditedUserEmail] = useState<string>(\"\");\r\nconst [editedUserPassword, setEditedUserPassword] = useState<string>(\"\");\r\nconst [editedUserAdmin, setEditedUserAdmin] = useState<Boolean>();\r\nconst [editedTaskId, setEditedTaskId] = useState<number | null>(null);\r\nconst [editedTaskTitle, setEditedTaskTitle] = useState<string>(\"\");\r\nconst [editedTaskDescription, setEditedTaskDescription] = useState<string>(\"\");\r\nconst [editedTaskStatus, setEditedTaskStatus] = useState<string>(\"\");\r\nconst [editedTaskPriority, setEditedTaskPriority] = useState<number>(0);\r\nconst [editedTaskDueDate, setEditedTaskDueDate] = useState<Date | null>(null);\r\nconst [newUsername, setNewUsername] = useState<string>(\"\");\r\nconst [newEmail, setNewEmail] = useState<string>(\"\");\r\nconst [newPassword, setNewPassword] = useState<string>(\"\");\r\nconst [isAdmin, setIsAdmin] = useState<boolean>(false); // Adjust if needed\r\nconst [newTaskTitle, setNewTaskTitle] = useState<string>(\"\");\r\nconst [newTaskDescription, setNewTaskDescription] = useState<string>(\"\");\r\nconst [newTaskStatus, setNewTaskStatus] = useState<string>(\"\");\r\nconst [newTaskPriority, setNewTaskPriority] = useState<number>(1); // Default priority, adjust as needed\r\nconst [newTaskDueDate, setNewTaskDueDate] = useState<Date | null>(null);\r\n\r\n\r\n  const ReadAllUsers=(): void =>{\r\n\r\n    try {\r\n        axios.get(`http://localhost:8081/User/ReadAll`, {\r\n        }).then(response=> { \r\n        localStorage.setItem(\"userii\", JSON.stringify(response.data));\r\n        setUsers(response.data);\r\n        console.log('Import succesful', response.data);\r\n        \r\n    });       \r\n  \r\n    } catch (error) {\r\n        console.error('Import failed', (error as Error).message);\r\n    }\r\n   \r\n\r\n  }\r\n\r\n  const ReadAllCategories = (): void => {\r\n\r\n    try {\r\n       axios.get(`http://localhost:8081/Category/ReadAll`, {\r\n       }).then(response=> { \r\n       localStorage.setItem(\"categorii\", JSON.stringify(response.data));\r\n       setCategories(response.data);\r\n       console.log('Import succesful', response.data);\r\n       \r\n   });       \r\n \r\n   } catch (error) {\r\n       console.error('Import failed', (error as Error).message);\r\n   }\r\n  \r\n };\r\n\r\n   const ReadAllTasks = (): void => {\r\n\r\n    try {\r\n       axios.get(`http://localhost:8081/Task/ReadAll`, {\r\n       }).then(response=> { \r\n       localStorage.setItem(\"tasks\", JSON.stringify(response.data));\r\n       setTasks(response.data);\r\n       console.log('Import succesful', response.data);\r\n       \r\n   });       \r\n \r\n   } catch (error) {\r\n       console.error('Import failed', (error as Error).message);\r\n   }\r\n  \r\n };\r\n\r\n  const handleUserClick = (user: User | null) => {\r\n    setSelectedUser(user);\r\n  };\r\n\r\n  const handleAddCategory = () => {\r\n    // Implement logic for adding a new category\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    // Implement logic for adding a new task\r\n  };\r\n\r\n  const handleAddUser = () => {\r\n    // Implement logic for adding a new user\r\n  };\r\n\r\n  const handleAddReminder = () => {\r\n    // Implement logic for adding a new reminder\r\n  };\r\n\r\n  const handleDeleteCategory = (categoryId: number) => {\r\n    // Implement logic for deleting a category\r\n  };\r\n\r\n  const handleDeleteTask = (taskId: number) => {\r\n    \r\n  };\r\n\r\n  const handleDeleteUser = (userId: number) => {\r\n    try {\r\n        axios.delete(`http://localhost:8081/User/Delete/${userId}`, {\r\n        }).then(response=> {\r\n          setUsers(currentU => currentU.filter(c => c.id !== userId));\r\n          console.log('User updated successfully', response.data);\r\n        });\r\n      } catch (error) {\r\n        console.error('User update failed', (error as Error).message);\r\n      }\r\n  };\r\n\r\n  const handleDeleteReminder = (reminderId: number) => {\r\n    // Implement logic for deleting a reminder\r\n  };\r\n\r\n  const handleEditCategory = (categoryId: number) => {\r\n    const categoryToEdit = categories.find((category) => category.categoryId === categoryId);\r\n\r\n    if (categoryToEdit) {\r\n      setEditedCategoryId(categoryId);\r\n      setEditedCategoryName(categoryToEdit.name);}\r\n    \r\n     \r\n  };\r\n\r\n  const handleUpdateCategory = (categoryId: number) => {\r\n    \r\n      try {\r\n        axios.put(`http://localhost:8081/Category/Update`, {\r\n            categoryId: categoryId,\r\n            name:editedCategoryName\r\n        }).then(response=> { \r\n        localStorage.setItem(\"categorii\", JSON.stringify(response.data));\r\n        setCategories([...categories, response.data]);\r\n        console.log('Import succesful', response.data);\r\n        \r\n    });       \r\n  \r\n    } catch (error) {\r\n        console.error('Import failed', (error as Error).message);\r\n    }\r\n  };\r\n\r\n\r\n  const handleEditTask = (taskId: number) => {\r\n    const taskToEdit = tasks.find((task) => task.taskId === taskId);\r\n  \r\n    if (taskToEdit) {\r\n      setEditedTaskId(taskId);\r\n      setEditedTaskTitle(taskToEdit.title);\r\n      setEditedTaskDescription(taskToEdit.description);\r\n      setEditedTaskStatus(taskToEdit.status);\r\n      setEditedTaskPriority(taskToEdit.priority);\r\n      setEditedTaskDueDate(new Date(taskToEdit.dueDate));\r\n    }\r\n  };\r\n  \r\n  const handleUpdateTask = (taskId: number) => {\r\n    try {\r\n      axios.put(`http://localhost:8081/Task/Update`, {\r\n        taskId: taskId,\r\n        title: editedTaskTitle,\r\n        description: editedTaskDescription,\r\n        status: editedTaskStatus,\r\n        priority: editedTaskPriority,\r\n        dueDate: editedTaskDueDate?.toISOString(),\r\n      }).then(response => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(response.data));\r\n        setTasks([...tasks, response.data]);\r\n        console.log('Update successful', response.data);\r\n      });\r\n    } catch (error) {\r\n      console.error('Update failed', (error as Error).message);\r\n    } finally {\r\n      setEditedTaskId(null); // Reset edited task ID\r\n    }\r\n  };\r\n\r\n  const handleEditUser = (userId: number) => {\r\n    const userToEdit = users.find((user) => user.id === userId);\r\n  \r\n    if (userToEdit) {\r\n      setEditedUserId(userId);\r\n      setEditedUserName(userToEdit.username);\r\n      setEditedUserEmail(userToEdit.email);\r\n      setEditedUserPassword(userToEdit.password);\r\n    }\r\n  };\r\n\r\n  const handleUpdateUser = (userId: number) => {\r\n    try {\r\n      axios.put(`http://localhost:8081/User/Update`, {\r\n        userId: userId,\r\n        username: editedUserName,\r\n        email: editedUserEmail,\r\n        password: editedUserPassword,\r\n      }).then(response => {\r\n        localStorage.setItem(\"userii\", JSON.stringify(response.data));\r\n        setUsers([...users, response.data]);\r\n        console.log('User updated successfully', response.data);\r\n      });\r\n    } catch (error) {\r\n      console.error('User update failed', (error as Error).message);\r\n    }\r\n  };\r\n  const handleEditReminder = (reminderId: number) => {\r\n    // Implement logic for editing a reminder\r\n  };\r\n\r\n  useEffect(() => {\r\n      \r\n  }, [selectedUser]);\r\n\r\n  const renderTables = (selectedUser: User | null) => { \r\n    if (!selectedUser) {\r\n      return <p>Please select a user from the list.</p>;\r\n    }\r\n    return (\r\n        <div>\r\n            \r\n         {/* Categories Table */}\r\n     \r\n    {/* Tasks Table */}\r\n    <TableContainer>\r\n      {/* Similar structure for Tasks Table */}\r\n    </TableContainer>\r\n\r\n\r\n    {/* Reminders Table */}\r\n    <TableContainer>\r\n      {/* Similar structure for Reminders Table */}\r\n    </TableContainer>\r\n\r\n    \r\n      {/* Add New Category */}\r\n      <TextField\r\n        label=\"New Category\"\r\n        variant=\"outlined\"\r\n        value={newCategory}\r\n        onChange={(e) => setNewCategory(e.target.value)}\r\n      />\r\n      <Button onClick={handleAddCategory} startIcon={<AddIcon />}>\r\n        Add Category\r\n      </Button>\r\n\r\n      {/* Add New Task */}\r\n      {/* Similar structure for Add New Task */}\r\n\r\n      \r\n\r\n      {/* Add New Reminder */}\r\n      {/* Similar structure for Add New Reminder */}\r\n    </div>\r\n    );\r\n    \r\n};\r\n\r\n  return (\r\n    <div>\r\n      <h2>Admin Page</h2>\r\n       \r\n       \r\n      <List style={{overflow: \"auto\"}}>\r\n        <ListItem\r\n          button\r\n          selected={!selectedUser}\r\n          onClick={() => ReadAllUsers()}\r\n        >\r\n          <ListItemText primary=\"All Users\" />\r\n          </ListItem>\r\n\r\n          <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>UserID</TableCell>\r\n            <TableCell>username</TableCell>\r\n            <TableCell>email</TableCell>\r\n            <TableCell>password</TableCell>\r\n            <TableCell>Actions</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {users.map((user) => (\r\n        <TableRow key={user.id}>\r\n          <TableCell>{user.id}</TableCell>\r\n          <TableCell>\r\n            {editedUserId === user.id ? (\r\n              <TextField\r\n                value={editedUserName}\r\n                onChange={(e) => setEditedUserName(e.target.value)}\r\n              />\r\n            ) : (\r\n              user.username\r\n            )}\r\n          </TableCell>\r\n          <TableCell>\r\n            {editedUserId === user.id ? (\r\n              <TextField\r\n                value={editedUserEmail}\r\n                onChange={(e) => setEditedUserEmail(e.target.value)}\r\n              />\r\n            ) : (\r\n              user.email\r\n            )}\r\n          </TableCell>\r\n          <TableCell>\r\n            {editedUserId === user.id ? (\r\n              <TextField\r\n                value={editedUserPassword}\r\n                onChange={(e) => setEditedUserPassword(e.target.value)}\r\n              />\r\n            ) : (\r\n              user.password\r\n            )}\r\n          </TableCell>\r\n         \r\n          <TableCell>\r\n            <IconButton onClick={() => handleUpdateUser(user.id)}>\r\n              <CheckCircleIcon />\r\n            </IconButton>\r\n            <IconButton onClick={() => handleEditUser(user.id)}>\r\n              <EditIcon />\r\n            </IconButton>\r\n            <IconButton onClick={() => handleDeleteUser(user.id)}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </TableCell>\r\n        </TableRow>\r\n      ))}\r\n      <TextField\r\n  label=\"Username\"\r\n  variant=\"outlined\"\r\n  value={newUsername}\r\n  onChange={(e) => setNewUsername(e.target.value)}\r\n/>\r\n<TextField\r\n  label=\"Email\"\r\n  variant=\"outlined\"\r\n  value={newEmail}\r\n  onChange={(e) => setNewEmail(e.target.value)}\r\n/>\r\n<TextField\r\n  label=\"Password\"\r\n  variant=\"outlined\"\r\n  type=\"password\"\r\n  value={newPassword}\r\n  onChange={(e) => setNewPassword(e.target.value)}\r\n/>\r\n<FormControlLabel\r\n  control={<Checkbox checked={isAdmin} onChange={() => setIsAdmin(!isAdmin)} />}\r\n  label=\"Admin\"\r\n/>\r\n<Button onClick={handleAddUser} startIcon={<AddIcon />}>\r\n  Add User\r\n</Button>\r\n\r\n    </TableBody>\r\n  </Table>\r\n</TableContainer>   \r\n    <ListItem\r\n          button\r\n          selected={!selectedUser}\r\n          onClick={() => ReadAllCategories()}\r\n        >\r\n          <ListItemText primary=\"All Categories\" />\r\n          </ListItem>\r\n    <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Category ID</TableCell>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Actions</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {categories.map((category) => (\r\n            <TableRow key={category.categoryId}>\r\n              <TableCell>{category.categoryId}</TableCell>\r\n              <TableCell>\r\n                  {editedCategoryId === category.categoryId ? (\r\n                    <TextField\r\n                      value={editedCategoryName}\r\n                      onChange={(e) => setEditedCategoryName(e.target.value)}\r\n                    />\r\n                  ) : (\r\n                    category.name\r\n                  )}\r\n                 </TableCell>           \r\n              <TableCell>\r\n              <IconButton onClick={() => handleUpdateCategory(category.categoryId)}>\r\n                  <CheckCircleIcon />\r\n                </IconButton>\r\n                <IconButton onClick={() => handleEditCategory(category.categoryId)}>\r\n                  <EditIcon />\r\n                </IconButton>\r\n                <IconButton onClick={() => handleDeleteCategory(category.categoryId)}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </TableCell>\r\n                   {/* Add New Category */}\r\n     \r\n            </TableRow>\r\n          ))}\r\n           <TextField\r\n        label=\"New Category\"\r\n        variant=\"outlined\"\r\n        value={newCategory}\r\n        onChange={(e) => setNewCategory(e.target.value)}\r\n      />\r\n      <Button onClick={handleAddCategory} startIcon={<AddIcon />}>\r\n        Add Category\r\n      </Button>\r\n\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    <ListItem\r\n          button\r\n          selected={!selectedUser}\r\n          onClick={() => ReadAllTasks()}\r\n        >\r\n          <ListItemText primary=\"All Tasks\" />\r\n          </ListItem>\r\n\r\n          <TableContainer>\r\n  <Table>\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell>TaskId</TableCell>\r\n        <TableCell>Task</TableCell>\r\n        <TableCell>Description</TableCell>\r\n        <TableCell>Status</TableCell>\r\n        <TableCell>Priority</TableCell>\r\n        <TableCell>Due Date</TableCell>\r\n        <TableCell>Actions</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n    <TableBody>\r\n      {tasks.map((task) => (\r\n        <TableRow key={task.taskId}>\r\n          <TableCell>{task.taskId}</TableCell>\r\n          <TableCell>\r\n            {editedTaskId === task.taskId ? (\r\n              <TextField\r\n                value={editedTaskTitle}\r\n                onChange={(e) => setEditedTaskTitle(e.target.value)}\r\n              />\r\n            ) : (\r\n              task.title\r\n            )}\r\n          </TableCell>\r\n          <TableCell>\r\n            {editedTaskId === task.taskId ? (\r\n              <TextField\r\n                value={editedTaskDescription}\r\n                onChange={(e) => setEditedTaskDescription(e.target.value)}\r\n              />\r\n            ) : (\r\n              task.description\r\n            )}\r\n          </TableCell>\r\n          <TableCell>\r\n            {editedTaskId === task.taskId ? (\r\n              <TextField\r\n                value={editedTaskStatus}\r\n                onChange={(e) => setEditedTaskStatus(e.target.value)}\r\n              />\r\n            ) : (\r\n              task.status\r\n            )}\r\n          </TableCell>\r\n          <TableCell>\r\n            {editedTaskId === task.taskId ? (\r\n              <TextField\r\n                type=\"number\"\r\n                value={editedTaskPriority}\r\n                onChange={(e) => setEditedTaskPriority(Number(e.target.value))}\r\n              />\r\n            ) : (\r\n              task.priority\r\n            )}\r\n          </TableCell>\r\n          <TableCell>\r\n            {editedTaskId === task.taskId ? (\r\n              <TextField\r\n                type=\"date\"\r\n                value={editedTaskDueDate?.toISOString().split(\"T\")[0]}\r\n                onChange={(e) => setEditedTaskDueDate(new Date(e.target.value))}\r\n              />\r\n            ) : (\r\n              new Date(task.dueDate).toLocaleDateString()\r\n            )}\r\n          </TableCell>\r\n          <TableCell>\r\n            <IconButton onClick={() => handleUpdateTask(task.taskId)}>\r\n              <CheckCircleIcon />\r\n            </IconButton>\r\n            <IconButton onClick={() => handleEditTask(task.taskId)}>\r\n              <EditIcon />\r\n            </IconButton>\r\n            <IconButton onClick={() => handleDeleteTask(task.taskId)}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </TableCell>\r\n        </TableRow>\r\n      ))}\r\n    </TableBody>\r\n  </Table>\r\n</TableContainer>\r\n\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}